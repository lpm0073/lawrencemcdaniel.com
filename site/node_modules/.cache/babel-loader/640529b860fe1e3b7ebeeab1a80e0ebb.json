{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dispatchBatchIfNeeded = undefined;\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _actionTypes = require('../action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nvar _partition3 = require('../utils/partition');\n\nvar _partition4 = _interopRequireDefault(_partition3);\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _track = require('../utils/track');\n\nvar _nullAction = require('../constants/null-action');\n\nvar _nullAction2 = _interopRequireDefault(_nullAction);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar batch = (0, _track.trackable)(function (model, actions) {\n  var dispatchableActions = actions.filter(function (action) {\n    return !!action;\n  });\n  if (!dispatchableActions.length) return _nullAction2.default;\n\n  if (dispatchableActions.length && dispatchableActions.every(_isPlainObject2.default)) {\n    if (dispatchableActions.length === 1) {\n      return dispatchableActions[0];\n    }\n\n    return {\n      type: _actionTypes2.default.BATCH,\n      model: model,\n      actions: dispatchableActions\n    };\n  }\n\n  var _partition = (0, _partition4.default)(dispatchableActions, function (action) {\n    return typeof action !== 'function';\n  }),\n      _partition2 = _slicedToArray(_partition, 2),\n      plainActions = _partition2[0],\n      actionThunks = _partition2[1];\n\n  if (!actionThunks.length) {\n    if (plainActions.length > 1) {\n      return {\n        type: _actionTypes2.default.BATCH,\n        model: model,\n        actions: plainActions\n      };\n    } else if (plainActions.length === 1) {\n      return plainActions[0];\n    }\n  }\n\n  return function (dispatch) {\n    if (plainActions.length > 1) {\n      dispatch({\n        type: _actionTypes2.default.BATCH,\n        model: model,\n        actions: plainActions\n      });\n    } else if (plainActions.length === 1) {\n      dispatch(plainActions[0]);\n    }\n\n    actionThunks.forEach(dispatch);\n  };\n});\n\nfunction dispatchBatchIfNeeded(model, actions, dispatch) {\n  if (!actions.length) return void 0;\n  var dispatchableActions = actions.filter(function (action) {\n    return !!action;\n  });\n  if (!dispatchableActions.length) return void 0;\n  return dispatch(batch(model, dispatchableActions));\n}\n\nexports.default = batch;\nexports.dispatchBatchIfNeeded = dispatchBatchIfNeeded;","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/node_modules/react-redux-form/lib/actions/batch-actions.js"],"names":["Object","defineProperty","exports","value","dispatchBatchIfNeeded","undefined","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","_actionTypes","require","_actionTypes2","_interopRequireDefault","_partition3","_partition4","_isPlainObject","_isPlainObject2","_track","_nullAction","_nullAction2","obj","__esModule","default","batch","trackable","model","actions","dispatchableActions","filter","action","every","type","BATCH","_partition","_partition2","plainActions","actionThunks","dispatch","forEach"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dispatchBatchIfNeeded = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _actionTypes = require('../action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nvar _partition3 = require('../utils/partition');\n\nvar _partition4 = _interopRequireDefault(_partition3);\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _track = require('../utils/track');\n\nvar _nullAction = require('../constants/null-action');\n\nvar _nullAction2 = _interopRequireDefault(_nullAction);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar batch = (0, _track.trackable)(function (model, actions) {\n  var dispatchableActions = actions.filter(function (action) {\n    return !!action;\n  });\n\n  if (!dispatchableActions.length) return _nullAction2.default;\n\n  if (dispatchableActions.length && dispatchableActions.every(_isPlainObject2.default)) {\n    if (dispatchableActions.length === 1) {\n      return dispatchableActions[0];\n    }\n\n    return {\n      type: _actionTypes2.default.BATCH,\n      model: model,\n      actions: dispatchableActions\n    };\n  }\n\n  var _partition = (0, _partition4.default)(dispatchableActions, function (action) {\n    return typeof action !== 'function';\n  }),\n      _partition2 = _slicedToArray(_partition, 2),\n      plainActions = _partition2[0],\n      actionThunks = _partition2[1];\n\n  if (!actionThunks.length) {\n    if (plainActions.length > 1) {\n      return {\n        type: _actionTypes2.default.BATCH,\n        model: model,\n        actions: plainActions\n      };\n    } else if (plainActions.length === 1) {\n      return plainActions[0];\n    }\n  }\n\n  return function (dispatch) {\n    if (plainActions.length > 1) {\n      dispatch({\n        type: _actionTypes2.default.BATCH,\n        model: model,\n        actions: plainActions\n      });\n    } else if (plainActions.length === 1) {\n      dispatch(plainActions[0]);\n    }\n    actionThunks.forEach(dispatch);\n  };\n});\n\nfunction dispatchBatchIfNeeded(model, actions, dispatch) {\n  if (!actions.length) return void 0;\n\n  var dispatchableActions = actions.filter(function (action) {\n    return !!action;\n  });\n\n  if (!dispatchableActions.length) return void 0;\n\n  return dispatch(batch(model, dispatchableActions));\n}\n\nexports.default = batch;\nexports.dispatchBatchIfNeeded = dispatchBatchIfNeeded;"]},"metadata":{},"sourceType":"script"}