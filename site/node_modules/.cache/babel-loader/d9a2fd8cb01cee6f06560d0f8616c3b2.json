{"ast":null,"code":"var _jsxFileName = \"/Users/mcdaniel/github/lpm0073/coursera-react/confusion/src/components/DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction RenderDish({\n  dish\n}) {\n  if (dish != null) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    width: \"100%\",\n    top: true,\n    src: dish.image,\n    alt: dish.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 25\n    }\n  }, dish.description))));else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  });\n}\n\nfunction RenderComments({\n  comments\n}) {\n  if (comments != null) {\n    const list_items = comments.map(comment => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: comment.id,\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, comment.comment), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, \"-- \", comment.author, \", \", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit'\n      }).format(new Date(Date.parse(comment.date))), \" \"));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 36\n      }\n    }, \"Comments\")), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, list_items))), /*#__PURE__*/React.createElement(CommentForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    })));\n  } else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  });\n}\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"Submit Comment\"));\n  }\n\n}\n\nconst DishDetail = props => {\n  if (props.dish != null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }\n    }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, props.dish.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, props.dish.name), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RenderDish, {\n      dish: props.dish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(RenderComments, {\n      comments: props.comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    })));\n  } else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  });\n};\n\nexport default DishDetail;","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/coursera-react/confusion/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","Breadcrumb","BreadcrumbItem","Button","Link","RenderDish","dish","image","name","description","RenderComments","comments","list_items","map","comment","id","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","constructor","props","state","isModalOpen","toggleModal","bind","setState","render","DishDetail"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, Breadcrumb, BreadcrumbItem, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n\nfunction RenderDish({dish}) {\n    if (dish != null)\n        return(\n            <div  className=\"col-12 col-md-5 m-1\">\n                <Card>\n                    <CardImg width=\"100%\" top src={dish.image} alt={dish.name} />\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    else\n        return(\n            <div></div>\n        );\n}\n\nfunction RenderComments({comments}) {\n\n    if (comments != null) {\n        const list_items = comments.map((comment) => {\n            return (\n                <li key={comment.id} className=\"\">\n                <p>{comment.comment}</p>\n                <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))} </p>\n                </li>\n            );\n        });\n\n        return (\n            <div  className=\"col-12 col-md-5 m-1\">\n                <Card>\n                    <CardBody>\n                        <CardTitle><h4>Comments</h4></CardTitle>\n                        <CardText>\n                            <ul className = \"list-unstyled\">\n                                {list_items}\n                            </ul>\n                        </CardText>\n                    </CardBody>\n                    <CommentForm />\n                </Card>\n\n            </div>\n\n        )\n\n    }\n    else \n        return(\n            <div></div>\n        )\n}\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n          };\n\n          this.toggleModal = this.toggleModal.bind(this);\n        }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        return ( \n            <Button  onClick={this.toggleModal}>\n                <span className=\"fa fa-pencil fa-lg\">Submit Comment</span>\n            </Button>\n)\n      }\n\n}\n\nconst DishDetail = (props) => {\n\n    if (props.dish != null) {\n\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n\n                    <div className=\"row\">\n                        <RenderDish dish={props.dish} />\n                        <RenderComments comments={props.comments} />\n                    </div>\n            </div>\n        );\n    }\n    else\n        return(\n            <div></div>\n        );\n\n}\n\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}