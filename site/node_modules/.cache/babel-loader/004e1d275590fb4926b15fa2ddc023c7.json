{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Leaders = (state = LEADERS, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\nexport const Dishes = (state = {\n  isLoading: true,\n  errMess: null,\n  leaders: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_LEADERS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        leaders: action.payload\n      };\n\n    case ActionTypes.LEADERS_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        leaders: []\n      };\n\n    case ActionTypes.LEADERS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        leaders: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/coursera-react/confusion/src/redux/leaders.js"],"names":["ActionTypes","Leaders","state","LEADERS","action","type","Dishes","isLoading","errMess","leaders","ADD_LEADERS","payload","LEADERS_LOADING","LEADERS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAGA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGC,OAAT,EAAkBC,MAAlB,KAA6B;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI;AACI,aAAOH,KAAP;AAFR;AAIH,CALM;AAQP,OAAO,MAAMI,MAAM,GAAG,CAACJ,KAAK,GAAG;AAC3BK,EAAAA,SAAS,EAAE,IADgB;AAE3BC,EAAAA,OAAO,EAAE,IAFkB;AAG3BC,EAAAA,OAAO,EAAE;AAHkB,CAAT,EAIfL,MAJe,KAIJ;AACd,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,WAAW,CAACU,WAAjB;AACI,aAAO,EAAC,GAAGR,KAAJ;AAAWK,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,OAAO,EAAEL,MAAM,CAACO;AAA5D,OAAP;;AAEJ,SAAKX,WAAW,CAACY,eAAjB;AACI,aAAO,EAAC,GAAGV,KAAJ;AAAWK,QAAAA,SAAS,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,IAArC;AAA2CC,QAAAA,OAAO,EAAE;AAApD,OAAP;;AAEJ,SAAKT,WAAW,CAACa,cAAjB;AACI,aAAO,EAAC,GAAGX,KAAJ;AAAWK,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAEJ,MAAM,CAACO,OAA7C;AAAsDF,QAAAA,OAAO,EAAE;AAA/D,OAAP;;AAEJ;AACI,aAAOP,KAAP;AAXR;AAaH,CAlBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\n\nexport const Leaders = (state = LEADERS, action) => {\n    switch(action.type) {\n        default: \n            return state;\n    }\n};\n\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []};\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\n            \n        default: \n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}