{"ast":null,"code":"import _objectSpread from\"/Users/mcdaniel/github/lpm0073/coursera-react/confusion/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as ActionTypes from'./ActionTypes';export var Comments=function Comments(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{errMess:null,comments:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ActionTypes.ADD_COMMENTS:return _objectSpread({},state,{isLoading:false,errMess:null,comments:action.payload});case ActionTypes.COMMENTS_FAILED:return _objectSpread({},state,{isLoading:false,errMess:action.payload,comments:[]});case ActionTypes.ADD_COMMENT:var comment=action.payload;return _objectSpread({},state,{comments:state.comments.concat(comment)});default:return state;}};","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/coursera-react/confusion/src/redux/comments.js"],"names":["ActionTypes","Comments","state","errMess","comments","action","type","ADD_COMMENTS","isLoading","payload","COMMENTS_FAILED","ADD_COMMENT","comment","concat"],"mappings":"yIAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAGV,IAHWC,CAAAA,KAGX,2DAHmB,CAC7BC,OAAO,CAAE,IADoB,CAE7BC,QAAQ,CAAE,EAFmB,CAGnB,IAAXC,CAAAA,MAAW,2CACV,OAAOA,MAAM,CAACC,IAAd,EACI,IAAKN,CAAAA,WAAW,CAACO,YAAjB,CACI,wBAAWL,KAAX,EAAkBM,SAAS,CAAE,KAA7B,CAAoCL,OAAO,CAAE,IAA7C,CAAmDC,QAAQ,CAAEC,MAAM,CAACI,OAApE,GAEJ,IAAKT,CAAAA,WAAW,CAACU,eAAjB,CACI,wBAAWR,KAAX,EAAkBM,SAAS,CAAE,KAA7B,CAAoCL,OAAO,CAAEE,MAAM,CAACI,OAApD,CAA6DL,QAAQ,CAAE,EAAvE,GAEJ,IAAKJ,CAAAA,WAAW,CAACW,WAAjB,CACI,GAAIC,CAAAA,OAAO,CAAGP,MAAM,CAACI,OAArB,CACA,wBAAWP,KAAX,EAAkBE,QAAQ,CAAEF,KAAK,CAACE,QAAN,CAAeS,MAAf,CAAsBD,OAAtB,CAA5B,GAEJ,QACI,MAAOV,CAAAA,KAAP,CAZR,CAcH,CAlBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: []\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\n    \n        case ActionTypes.ADD_COMMENT: \n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        default: \n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}