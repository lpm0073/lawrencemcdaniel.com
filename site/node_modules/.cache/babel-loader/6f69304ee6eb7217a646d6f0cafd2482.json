{"ast":null,"code":"var _jsxFileName = \"/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/pages/skills/skillColumn.js\";\nimport React from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n/*\n Canvas animated drawing in React: http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n */\n\nconst getPixelRatio = context => {\n  var backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nconst SkillColumn = props => {\n  const thisClassName = \"fa p-3 \" + props.icon + \" fa-2x\";\n  const ref = useRef();\n  useEffect(() => {\n    let canvas = ref.current;\n    let context = canvas.getContext('2d');\n    let ratio = getPixelRatio(context);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    let requestId,\n        i = 0;\n\n    const render = () => {\n      x = canvas.width / 2;\n      y = canvas.height / 2;\n      var radius = x;\n      var endPercent = 85;\n      var curPerc = 0;\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      context.beginPath();\n      /* context.arc(x, y, radius, -(quart), ((circ) * current) - quart, false); */\n\n      context.arc(x, y, canvas.width / 2 * Math.abs(Math.cos(i)), 0, 2 * Math.PI);\n      context.fill();\n      i += 0.05;\n      requestId = requestAnimationFrame(render);\n    };\n\n    render();\n    return () => {\n      cancelAnimationFrame(requestId);\n    };\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-2 col-md-4 col-sm-6 px-1 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skill-column text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: ref,\n    className: \"skill-pct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"skill-title mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"skill-description px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, props.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skill-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: thisClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default SkillColumn;","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/pages/skills/skillColumn.js"],"names":["React","useRef","useEffect","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","SkillColumn","props","thisClassName","icon","ref","canvas","current","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","requestId","i","render","x","y","radius","endPercent","curPerc","clearRect","beginPath","arc","Math","abs","cos","PI","fill","requestAnimationFrame","cancelAnimationFrame","title","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n\n/*\n Canvas animated drawing in React: http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n */\n\nconst getPixelRatio = context => {\n    var backingStore = context.backingStorePixelRatio ||\n                        context.webkitBackingStorePixelRatio ||\n                        context.mozBackingStorePixelRatio ||\n                        context.msBackingStorePixelRatio ||\n                        context.oBackingStorePixelRatio ||\n                        context.backingStorePixelRatio || \n                        1;\n    \n    return (window.devicePixelRatio || 1) / backingStore;\n    };\n\nconst SkillColumn = (props) => {\n    \n    const thisClassName = \"fa p-3 \" + props.icon + \" fa-2x\";\n    const ref = useRef();\n\n    useEffect(() => {\n        let canvas = ref.current;\n        let context = canvas.getContext('2d');\n        \n        let ratio = getPixelRatio(context);\n        let width = getComputedStyle(canvas)\n            .getPropertyValue('width')\n            .slice(0, -2);\n        let height = getComputedStyle(canvas)\n            .getPropertyValue('height')\n            .slice(0, -2);\n                \n        canvas.width = width * ratio;\n        canvas.height = height * ratio;\n        canvas.style.width = `${width}px`;\n        canvas.style.height = `${height}px`;\n        let requestId, i = 0;\n\n        const render = () => {\n            x = canvas.width / 2;\n            y = canvas.height / 2;\n            var radius = x;\n            var endPercent = 85;\n            var curPerc = 0;\n         \n            context.clearRect(0, 0, canvas.width, canvas.height);\n            context.beginPath();\n\n            /* context.arc(x, y, radius, -(quart), ((circ) * current) - quart, false); */\n            context.arc(x,\n                        y,\n                        (canvas.width / 2) * Math.abs(Math.cos(i)),\n                        0,\n                        2 * Math.PI\n                        );\n            context.fill();\n            i += 0.05;\n     \n            requestId = requestAnimationFrame(render);\n        };\n\n        render();\n\n        return () => {\n            cancelAnimationFrame(requestId);\n        };\n\n    });\n\n    return(\n        <React.Fragment>\n            <div className=\"col-lg-2 col-md-4 col-sm-6 px-1 mb-5\">\n                <div className=\"skill-column text-center\">\n                    <canvas \n                        ref={ref}\n                        className=\"skill-pct\" />\n                    <h4 className=\"skill-title mt-4\">{props.title}</h4>\n                    <p className=\"skill-description px-2\">{props.description}</p>\n                    <div className=\"skill-icon\">\n                        <i className={thisClassName}></i>\n                    </div>\n                </div>\n            </div>\n\n        </React.Fragment>\n\n    );\n}\n\nexport default SkillColumn;\n\n"]},"metadata":{},"sourceType":"module"}