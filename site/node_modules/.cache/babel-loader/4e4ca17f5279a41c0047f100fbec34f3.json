{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.createFormActionsReducer = createFormActionsReducer;\n\nvar _actionTypes = require('../action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nvar _updateField = require('../utils/update-field');\n\nvar _updateField2 = _interopRequireDefault(_updateField);\n\nvar _updateParentForms = require('../utils/update-parent-forms');\n\nvar _updateParentForms2 = _interopRequireDefault(_updateParentForms);\n\nvar _updateSubFields = require('../utils/update-sub-fields');\n\nvar _updateSubFields2 = _interopRequireDefault(_updateSubFields);\n\nvar _getFieldForm = require('../utils/get-field-form');\n\nvar _getFieldForm2 = _interopRequireDefault(_getFieldForm);\n\nvar _isPristine = require('../form/is-pristine');\n\nvar _isPristine2 = _interopRequireDefault(_isPristine);\n\nvar _map = require('../utils/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mapValues = require('../utils/map-values');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nvar _inverse = require('../utils/inverse');\n\nvar _inverse2 = _interopRequireDefault(_inverse);\n\nvar _mergeValidity = require('../utils/merge-validity');\n\nvar _mergeValidity2 = _interopRequireDefault(_mergeValidity);\n\nvar _isValid = require('../form/is-valid');\n\nvar _isValid2 = _interopRequireDefault(_isValid);\n\nvar _isValidityValid = require('../utils/is-validity-valid');\n\nvar _isValidityValid2 = _interopRequireDefault(_isValidityValid);\n\nvar _isValidityInvalid = require('../utils/is-validity-invalid');\n\nvar _isValidityInvalid2 = _interopRequireDefault(_isValidityInvalid);\n\nvar _fieldActions = require('../actions/field-actions');\n\nvar _fieldActions2 = _interopRequireDefault(_fieldActions);\n\nvar _toPath = require('../utils/to-path');\n\nvar _toPath2 = _interopRequireDefault(_toPath);\n\nvar _initialFieldState = require('../constants/initial-field-state');\n\nvar _initialFieldState2 = _interopRequireDefault(_initialFieldState);\n\nvar _createField = require('../utils/create-field');\n\nvar _assocIn = require('../utils/assoc-in');\n\nvar _assocIn2 = _interopRequireDefault(_assocIn);\n\nvar _getFormValue = require('../utils/get-form-value');\n\nvar _getFormValue2 = _interopRequireDefault(_getFormValue);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar resetFieldState = function resetFieldState(field, customInitialFieldState) {\n  if (!(0, _isPlainObject2.default)(field)) return field;\n  var intents = [{\n    type: 'reset'\n  }];\n  var resetValue = (0, _createField.getMeta)(field, 'initialValue');\n  var loadedValue = (0, _createField.getMeta)(field, 'loadedValue');\n\n  if (loadedValue && resetValue !== loadedValue) {\n    intents.push({\n      type: 'load'\n    });\n    resetValue = loadedValue;\n  }\n\n  return (0, _createField.fieldOrForm)((0, _createField.getMeta)(field, 'model'), resetValue, _extends({}, customInitialFieldState, {\n    intents: intents\n  }));\n};\n\nvar setInitialFieldState = function setInitialFieldState(customInitialFieldState) {\n  return function (field) {\n    if (!(0, _isPlainObject2.default)(field)) return field;\n\n    if (field.$form) {\n      // eslint-disable-next-line arrow-body-style\n      return (0, _mapValues2.default)(field, function (fieldState, key) {\n        return key === '$form' ? (0, _createField.updateFieldState)(customInitialFieldState, {\n          value: field.value,\n          model: field.model\n        }) : resetFieldState(fieldState, customInitialFieldState);\n      });\n    }\n\n    return (0, _createField.updateFieldState)(customInitialFieldState, {\n      value: field.value,\n      model: field.model\n    });\n  };\n};\n\nvar addIntent = function addIntent(intents, newIntent) {\n  if (!intents) return [newIntent];\n  if (intents.some(function (intent) {\n    return intent.type === newIntent.type;\n  })) return intents;\n  return intents.concat(newIntent);\n};\n\nvar clearIntents = function clearIntents(intents, oldIntent) {\n  if (!intents || typeof oldIntent === 'undefined') return [];\n  return intents.filter(function (intent) {\n    return intent.type !== oldIntent.type;\n  });\n};\n\nvar defaultOptions = {\n  initialFieldState: _initialFieldState2.default\n};\n\nfunction createFormActionsReducer(options) {\n  var formOptions = options ? _extends({}, defaultOptions, options, {\n    initialFieldState: _extends({}, defaultOptions.initialFieldState, options.initialFieldState)\n  }) : defaultOptions;\n  var customInitialFieldState = formOptions.initialFieldState;\n  return function formActionsReducer(state, action, localPath) {\n    var _getFieldAndForm = (0, _updateField.getFieldAndForm)(state, localPath),\n        _getFieldAndForm2 = _slicedToArray(_getFieldAndForm, 1),\n        field = _getFieldAndForm2[0];\n\n    var fieldState = field && field.$form ? field.$form : field;\n    var intents = fieldState.intents;\n    var fieldUpdates = {};\n    var subFieldUpdates = {};\n    var parentFormUpdates = void 0;\n\n    switch (action.type) {\n      case _actionTypes2.default.FOCUS:\n        {\n          fieldUpdates = {\n            focus: true,\n            intents: action.silent ? intents : addIntent(intents, action)\n          };\n          break;\n        }\n\n      case _actionTypes2.default.BLUR:\n      case _actionTypes2.default.SET_TOUCHED:\n        {\n          var fieldForm = (0, _getFieldForm2.default)(state, localPath).$form;\n          fieldUpdates = {\n            focus: action.type === _actionTypes2.default.BLUR ? false : field.focus,\n            touched: true,\n            retouched: fieldForm ? !!(fieldForm.submitted || fieldForm.submitFailed) : false\n          };\n          parentFormUpdates = {\n            touched: true,\n            retouched: fieldUpdates.retouched\n          };\n          break;\n        }\n\n      case _actionTypes2.default.SET_UNTOUCHED:\n        {\n          fieldUpdates = {\n            focus: false,\n            touched: false\n          };\n          break;\n        }\n\n      case _actionTypes2.default.SET_PRISTINE:\n      case _actionTypes2.default.SET_DIRTY:\n        {\n          var pristine = action.type === _actionTypes2.default.SET_PRISTINE;\n          fieldUpdates = {\n            pristine: pristine\n          };\n          subFieldUpdates = {\n            pristine: pristine\n          };\n\n          parentFormUpdates = function parentFormUpdates(form) {\n            return {\n              pristine: (0, _isPristine2.default)(form)\n            };\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_VALIDATING:\n        {\n          fieldUpdates = {\n            validating: action.validating,\n            validated: !action.validating\n          };\n          break;\n        }\n\n      case _actionTypes2.default.SET_VALIDITY:\n      case _actionTypes2.default.SET_ERRORS:\n        {\n          var _fieldUpdates;\n\n          var isErrors = action.type === _actionTypes2.default.SET_ERRORS;\n          var validity = void 0;\n\n          if (isErrors) {\n            validity = action.merge ? (0, _mergeValidity2.default)(fieldState.errors, action.errors) : action.errors;\n          } else {\n            validity = action.merge ? (0, _mergeValidity2.default)(fieldState.validity, action.validity) : action.validity;\n          }\n\n          var inverseValidity = (0, _isPlainObject2.default)(validity) ? (0, _mapValues2.default)(validity, _inverse2.default) : !validity; // If the field is a form, its validity is\n          // also based on whether its fields are all valid.\n\n          var areFieldsValid = field && field.$form ? (0, _isValid.fieldsValid)(field, {\n            async: false\n          }) : true;\n          fieldUpdates = (_fieldUpdates = {}, _defineProperty(_fieldUpdates, isErrors ? 'errors' : 'validity', validity), _defineProperty(_fieldUpdates, isErrors ? 'validity' : 'errors', inverseValidity), _defineProperty(_fieldUpdates, 'validating', false), _defineProperty(_fieldUpdates, 'validated', true), _defineProperty(_fieldUpdates, 'valid', areFieldsValid && (isErrors ? !(0, _isValidityInvalid2.default)(validity) : (0, _isValidityValid2.default)(validity))), _fieldUpdates);\n\n          if (action.async) {\n            var actionValidity = isErrors ? action.errors : action.validity;\n            fieldUpdates.asyncKeys = (0, _isPlainObject2.default)(actionValidity) || Array.isArray(actionValidity) ? Object.keys(actionValidity) : true;\n          }\n\n          parentFormUpdates = function parentFormUpdates(form) {\n            return {\n              valid: (0, _isValid2.default)(form)\n            };\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_FIELDS_VALIDITY:\n        {\n          return (0, _map2.default)(action.fieldsValidity, function (fieldValidity, subField) {\n            return _fieldActions2.default.setValidity(subField, fieldValidity, action.options);\n          }).reduce(function (accState, subAction) {\n            return formActionsReducer(accState, subAction, localPath.concat((0, _toPath2.default)(subAction.model)));\n          }, state);\n        }\n\n      case _actionTypes2.default.RESET_VALIDITY:\n        {\n          var _validity = _extends({}, fieldState.validity);\n\n          var errors = void 0;\n          var valid = void 0;\n\n          if (action.omitKeys && typeof fieldState.errors !== 'string') {\n            errors = _extends({}, fieldState.errors);\n            action.omitKeys.forEach(function (key) {\n              delete _validity[key];\n              delete errors[key];\n            });\n            valid = (0, _isValidityValid2.default)(_validity);\n          } else {\n            _validity = customInitialFieldState.validity;\n            errors = customInitialFieldState.errors;\n            valid = customInitialFieldState.valid;\n          }\n\n          fieldUpdates = {\n            valid: valid,\n            validity: _validity,\n            errors: errors\n          };\n          subFieldUpdates = {\n            valid: customInitialFieldState.valid,\n            validity: customInitialFieldState.validity,\n            errors: customInitialFieldState.errors\n          };\n          break;\n        }\n\n      case _actionTypes2.default.SET_PENDING:\n        {\n          fieldUpdates = {\n            pending: action.pending,\n            submitted: false,\n            submitFailed: false,\n            retouched: false\n          };\n          subFieldUpdates = {\n            pending: action.pending,\n            submitted: false,\n            submitFailed: false,\n            retouched: false\n          };\n          parentFormUpdates = {\n            pending: action.pending\n          };\n          break;\n        }\n\n      case _actionTypes2.default.SET_SUBMITTED:\n        {\n          var submitted = !!action.submitted;\n          fieldUpdates = {\n            pending: false,\n            submitted: submitted,\n            submitFailed: submitted ? false : fieldState && fieldState.submitFailed,\n            touched: true,\n            retouched: false\n          };\n          subFieldUpdates = {\n            pending: false,\n            submitted: submitted,\n            submitFailed: submitted ? false : fieldUpdates.submitFailed,\n            retouched: false\n          };\n          break;\n        }\n\n      case _actionTypes2.default.SET_SUBMIT_FAILED:\n        {\n          fieldUpdates = {\n            pending: false,\n            submitted: fieldState.submitted && !action.submitFailed,\n            submitFailed: !!action.submitFailed,\n            touched: true,\n            retouched: false\n          };\n          subFieldUpdates = {\n            pending: false,\n            submitted: !action.submitFailed,\n            submitFailed: !!action.submitFailed,\n            touched: true,\n            retouched: false\n          };\n          break;\n        }\n\n      case _actionTypes2.default.RESET:\n        {\n          return localPath.length ? (0, _assocIn2.default)(state, localPath, resetFieldState(field, customInitialFieldState)) : resetFieldState(field, customInitialFieldState);\n        }\n\n      case _actionTypes2.default.SET_INITIAL:\n        {\n          var setCustomInitialFieldState = setInitialFieldState(customInitialFieldState);\n          return (0, _updateField2.default)(state, localPath, setCustomInitialFieldState, setCustomInitialFieldState);\n        }\n\n      case _actionTypes2.default.ADD_INTENT:\n        {\n          fieldUpdates = {\n            intents: addIntent(intents, action.intent)\n          };\n          break;\n        }\n\n      case _actionTypes2.default.CLEAR_INTENTS:\n        {\n          fieldUpdates = {\n            intents: clearIntents(intents, action.intent)\n          };\n          break;\n        }\n\n      case _actionTypes2.default.CHANGE:\n        {\n          return (0, _updateParentForms2.default)(state, localPath, function (parentForm) {\n            var formModelValue = (0, _getFormValue2.default)(parentForm);\n\n            if (!parentForm.$form) {\n              return _extends({}, customInitialFieldState, {\n                value: formModelValue,\n                initialValue: formModelValue\n              });\n            } // If the form is invalid (due to async validity)\n            // but its fields are valid and the value has changed,\n            // the form should be \"valid\" again.\n\n\n            if ((!parentForm.$form.validity || typeof parentForm.$form.validity === 'boolean' || !Object.keys(parentForm.$form.validity).length) && !parentForm.$form.valid && (0, _isValid2.default)(parentForm, {\n              async: false\n            })) {\n              return {\n                value: formModelValue,\n                validity: true,\n                errors: false,\n                valid: true\n              };\n            }\n\n            return {\n              value: formModelValue\n            };\n          });\n        }\n\n      default:\n        return state;\n    }\n\n    if (action.clearIntents) {\n      fieldUpdates.intents = clearIntents(intents, action.clearIntents);\n    }\n\n    var updatedField = (0, _updateField2.default)(state, localPath, fieldUpdates);\n    var updatedSubFields = Object.keys(subFieldUpdates).length ? (0, _updateSubFields2.default)(updatedField, localPath, subFieldUpdates) : updatedField;\n    var updatedParentForms = parentFormUpdates ? (0, _updateParentForms2.default)(updatedSubFields, localPath, parentFormUpdates) : updatedSubFields;\n    return updatedParentForms;\n  };\n}\n\nexports.default = createFormActionsReducer();","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/node_modules/react-redux-form/lib/reducers/form-actions-reducer.js"],"names":["Object","defineProperty","exports","value","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","Array","isArray","TypeError","_extends","assign","target","arguments","source","key","prototype","hasOwnProperty","call","createFormActionsReducer","_actionTypes","require","_actionTypes2","_interopRequireDefault","_updateField","_updateField2","_updateParentForms","_updateParentForms2","_updateSubFields","_updateSubFields2","_getFieldForm","_getFieldForm2","_isPristine","_isPristine2","_map","_map2","_isPlainObject","_isPlainObject2","_mapValues","_mapValues2","_inverse","_inverse2","_mergeValidity","_mergeValidity2","_isValid","_isValid2","_isValidityValid","_isValidityValid2","_isValidityInvalid","_isValidityInvalid2","_fieldActions","_fieldActions2","_toPath","_toPath2","_initialFieldState","_initialFieldState2","_createField","_assocIn","_assocIn2","_getFormValue","_getFormValue2","obj","__esModule","default","_defineProperty","enumerable","configurable","writable","resetFieldState","field","customInitialFieldState","intents","type","resetValue","getMeta","loadedValue","fieldOrForm","setInitialFieldState","$form","fieldState","updateFieldState","model","addIntent","newIntent","some","intent","concat","clearIntents","oldIntent","filter","defaultOptions","initialFieldState","options","formOptions","formActionsReducer","state","action","localPath","_getFieldAndForm","getFieldAndForm","_getFieldAndForm2","fieldUpdates","subFieldUpdates","parentFormUpdates","FOCUS","focus","silent","BLUR","SET_TOUCHED","fieldForm","touched","retouched","submitted","submitFailed","SET_UNTOUCHED","SET_PRISTINE","SET_DIRTY","pristine","form","SET_VALIDATING","validating","validated","SET_VALIDITY","SET_ERRORS","_fieldUpdates","isErrors","validity","merge","errors","inverseValidity","areFieldsValid","fieldsValid","async","actionValidity","asyncKeys","keys","valid","SET_FIELDS_VALIDITY","fieldsValidity","fieldValidity","subField","setValidity","reduce","accState","subAction","RESET_VALIDITY","_validity","omitKeys","forEach","SET_PENDING","pending","SET_SUBMITTED","SET_SUBMIT_FAILED","RESET","SET_INITIAL","setCustomInitialFieldState","ADD_INTENT","CLEAR_INTENTS","CHANGE","parentForm","formModelValue","initialValue","updatedField","updatedSubFields","updatedParentForms"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.createFormActionsReducer = createFormActionsReducer;\n\nvar _actionTypes = require('../action-types');\n\nvar _actionTypes2 = _interopRequireDefault(_actionTypes);\n\nvar _updateField = require('../utils/update-field');\n\nvar _updateField2 = _interopRequireDefault(_updateField);\n\nvar _updateParentForms = require('../utils/update-parent-forms');\n\nvar _updateParentForms2 = _interopRequireDefault(_updateParentForms);\n\nvar _updateSubFields = require('../utils/update-sub-fields');\n\nvar _updateSubFields2 = _interopRequireDefault(_updateSubFields);\n\nvar _getFieldForm = require('../utils/get-field-form');\n\nvar _getFieldForm2 = _interopRequireDefault(_getFieldForm);\n\nvar _isPristine = require('../form/is-pristine');\n\nvar _isPristine2 = _interopRequireDefault(_isPristine);\n\nvar _map = require('../utils/map');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _isPlainObject = require('../utils/is-plain-object');\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _mapValues = require('../utils/map-values');\n\nvar _mapValues2 = _interopRequireDefault(_mapValues);\n\nvar _inverse = require('../utils/inverse');\n\nvar _inverse2 = _interopRequireDefault(_inverse);\n\nvar _mergeValidity = require('../utils/merge-validity');\n\nvar _mergeValidity2 = _interopRequireDefault(_mergeValidity);\n\nvar _isValid = require('../form/is-valid');\n\nvar _isValid2 = _interopRequireDefault(_isValid);\n\nvar _isValidityValid = require('../utils/is-validity-valid');\n\nvar _isValidityValid2 = _interopRequireDefault(_isValidityValid);\n\nvar _isValidityInvalid = require('../utils/is-validity-invalid');\n\nvar _isValidityInvalid2 = _interopRequireDefault(_isValidityInvalid);\n\nvar _fieldActions = require('../actions/field-actions');\n\nvar _fieldActions2 = _interopRequireDefault(_fieldActions);\n\nvar _toPath = require('../utils/to-path');\n\nvar _toPath2 = _interopRequireDefault(_toPath);\n\nvar _initialFieldState = require('../constants/initial-field-state');\n\nvar _initialFieldState2 = _interopRequireDefault(_initialFieldState);\n\nvar _createField = require('../utils/create-field');\n\nvar _assocIn = require('../utils/assoc-in');\n\nvar _assocIn2 = _interopRequireDefault(_assocIn);\n\nvar _getFormValue = require('../utils/get-form-value');\n\nvar _getFormValue2 = _interopRequireDefault(_getFormValue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar resetFieldState = function resetFieldState(field, customInitialFieldState) {\n  if (!(0, _isPlainObject2.default)(field)) return field;\n\n  var intents = [{ type: 'reset' }];\n  var resetValue = (0, _createField.getMeta)(field, 'initialValue');\n  var loadedValue = (0, _createField.getMeta)(field, 'loadedValue');\n\n  if (loadedValue && resetValue !== loadedValue) {\n    intents.push({ type: 'load' });\n    resetValue = loadedValue;\n  }\n  return (0, _createField.fieldOrForm)((0, _createField.getMeta)(field, 'model'), resetValue, _extends({}, customInitialFieldState, { intents: intents }));\n};\n\nvar setInitialFieldState = function setInitialFieldState(customInitialFieldState) {\n  return function (field) {\n    if (!(0, _isPlainObject2.default)(field)) return field;\n\n    if (field.$form) {\n      // eslint-disable-next-line arrow-body-style\n      return (0, _mapValues2.default)(field, function (fieldState, key) {\n        return key === '$form' ? (0, _createField.updateFieldState)(customInitialFieldState, {\n          value: field.value,\n          model: field.model\n        }) : resetFieldState(fieldState, customInitialFieldState);\n      });\n    }\n\n    return (0, _createField.updateFieldState)(customInitialFieldState, {\n      value: field.value,\n      model: field.model\n    });\n  };\n};\n\nvar addIntent = function addIntent(intents, newIntent) {\n  if (!intents) return [newIntent];\n  if (intents.some(function (intent) {\n    return intent.type === newIntent.type;\n  })) return intents;\n\n  return intents.concat(newIntent);\n};\n\nvar clearIntents = function clearIntents(intents, oldIntent) {\n  if (!intents || typeof oldIntent === 'undefined') return [];\n  return intents.filter(function (intent) {\n    return intent.type !== oldIntent.type;\n  });\n};\n\nvar defaultOptions = {\n  initialFieldState: _initialFieldState2.default\n};\n\nfunction createFormActionsReducer(options) {\n  var formOptions = options ? _extends({}, defaultOptions, options, {\n    initialFieldState: _extends({}, defaultOptions.initialFieldState, options.initialFieldState)\n  }) : defaultOptions;\n\n  var customInitialFieldState = formOptions.initialFieldState;\n\n  return function formActionsReducer(state, action, localPath) {\n    var _getFieldAndForm = (0, _updateField.getFieldAndForm)(state, localPath),\n        _getFieldAndForm2 = _slicedToArray(_getFieldAndForm, 1),\n        field = _getFieldAndForm2[0];\n\n    var fieldState = field && field.$form ? field.$form : field;\n\n    var intents = fieldState.intents;\n\n\n    var fieldUpdates = {};\n    var subFieldUpdates = {};\n    var parentFormUpdates = void 0;\n\n    switch (action.type) {\n      case _actionTypes2.default.FOCUS:\n        {\n          fieldUpdates = {\n            focus: true,\n            intents: action.silent ? intents : addIntent(intents, action)\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.BLUR:\n      case _actionTypes2.default.SET_TOUCHED:\n        {\n          var fieldForm = (0, _getFieldForm2.default)(state, localPath).$form;\n\n          fieldUpdates = {\n            focus: action.type === _actionTypes2.default.BLUR ? false : field.focus,\n            touched: true,\n            retouched: fieldForm ? !!(fieldForm.submitted || fieldForm.submitFailed) : false\n          };\n\n          parentFormUpdates = {\n            touched: true,\n            retouched: fieldUpdates.retouched\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_UNTOUCHED:\n        {\n          fieldUpdates = {\n            focus: false,\n            touched: false\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_PRISTINE:\n      case _actionTypes2.default.SET_DIRTY:\n        {\n          var pristine = action.type === _actionTypes2.default.SET_PRISTINE;\n\n          fieldUpdates = {\n            pristine: pristine\n          };\n\n          subFieldUpdates = {\n            pristine: pristine\n          };\n\n          parentFormUpdates = function parentFormUpdates(form) {\n            return { pristine: (0, _isPristine2.default)(form) };\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_VALIDATING:\n        {\n          fieldUpdates = {\n            validating: action.validating,\n            validated: !action.validating\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_VALIDITY:\n      case _actionTypes2.default.SET_ERRORS:\n        {\n          var _fieldUpdates;\n\n          var isErrors = action.type === _actionTypes2.default.SET_ERRORS;\n          var validity = void 0;\n          if (isErrors) {\n            validity = action.merge ? (0, _mergeValidity2.default)(fieldState.errors, action.errors) : action.errors;\n          } else {\n            validity = action.merge ? (0, _mergeValidity2.default)(fieldState.validity, action.validity) : action.validity;\n          }\n\n          var inverseValidity = (0, _isPlainObject2.default)(validity) ? (0, _mapValues2.default)(validity, _inverse2.default) : !validity;\n\n          // If the field is a form, its validity is\n          // also based on whether its fields are all valid.\n          var areFieldsValid = field && field.$form ? (0, _isValid.fieldsValid)(field, { async: false }) : true;\n\n          fieldUpdates = (_fieldUpdates = {}, _defineProperty(_fieldUpdates, isErrors ? 'errors' : 'validity', validity), _defineProperty(_fieldUpdates, isErrors ? 'validity' : 'errors', inverseValidity), _defineProperty(_fieldUpdates, 'validating', false), _defineProperty(_fieldUpdates, 'validated', true), _defineProperty(_fieldUpdates, 'valid', areFieldsValid && (isErrors ? !(0, _isValidityInvalid2.default)(validity) : (0, _isValidityValid2.default)(validity))), _fieldUpdates);\n\n          if (action.async) {\n            var actionValidity = isErrors ? action.errors : action.validity;\n\n            fieldUpdates.asyncKeys = (0, _isPlainObject2.default)(actionValidity) || Array.isArray(actionValidity) ? Object.keys(actionValidity) : true;\n          }\n\n          parentFormUpdates = function parentFormUpdates(form) {\n            return { valid: (0, _isValid2.default)(form) };\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_FIELDS_VALIDITY:\n        {\n          return (0, _map2.default)(action.fieldsValidity, function (fieldValidity, subField) {\n            return _fieldActions2.default.setValidity(subField, fieldValidity, action.options);\n          }).reduce(function (accState, subAction) {\n            return formActionsReducer(accState, subAction, localPath.concat((0, _toPath2.default)(subAction.model)));\n          }, state);\n        }\n\n      case _actionTypes2.default.RESET_VALIDITY:\n        {\n          var _validity = _extends({}, fieldState.validity);\n          var errors = void 0;\n          var valid = void 0;\n\n          if (action.omitKeys && typeof fieldState.errors !== 'string') {\n            errors = _extends({}, fieldState.errors);\n            action.omitKeys.forEach(function (key) {\n              delete _validity[key];\n              delete errors[key];\n            });\n            valid = (0, _isValidityValid2.default)(_validity);\n          } else {\n            _validity = customInitialFieldState.validity;\n            errors = customInitialFieldState.errors;\n            valid = customInitialFieldState.valid;\n          }\n\n          fieldUpdates = {\n            valid: valid,\n            validity: _validity,\n            errors: errors\n          };\n\n          subFieldUpdates = {\n            valid: customInitialFieldState.valid,\n            validity: customInitialFieldState.validity,\n            errors: customInitialFieldState.errors\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_PENDING:\n        {\n          fieldUpdates = {\n            pending: action.pending,\n            submitted: false,\n            submitFailed: false,\n            retouched: false\n          };\n\n          subFieldUpdates = {\n            pending: action.pending,\n            submitted: false,\n            submitFailed: false,\n            retouched: false\n          };\n\n          parentFormUpdates = { pending: action.pending };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_SUBMITTED:\n        {\n          var submitted = !!action.submitted;\n\n          fieldUpdates = {\n            pending: false,\n            submitted: submitted,\n            submitFailed: submitted ? false : fieldState && fieldState.submitFailed,\n            touched: true,\n            retouched: false\n          };\n\n          subFieldUpdates = {\n            pending: false,\n            submitted: submitted,\n            submitFailed: submitted ? false : fieldUpdates.submitFailed,\n            retouched: false\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.SET_SUBMIT_FAILED:\n        {\n          fieldUpdates = {\n            pending: false,\n            submitted: fieldState.submitted && !action.submitFailed,\n            submitFailed: !!action.submitFailed,\n            touched: true,\n            retouched: false\n          };\n\n          subFieldUpdates = {\n            pending: false,\n            submitted: !action.submitFailed,\n            submitFailed: !!action.submitFailed,\n            touched: true,\n            retouched: false\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.RESET:\n        {\n          return localPath.length ? (0, _assocIn2.default)(state, localPath, resetFieldState(field, customInitialFieldState)) : resetFieldState(field, customInitialFieldState);\n        }\n\n      case _actionTypes2.default.SET_INITIAL:\n        {\n          var setCustomInitialFieldState = setInitialFieldState(customInitialFieldState);\n\n          return (0, _updateField2.default)(state, localPath, setCustomInitialFieldState, setCustomInitialFieldState);\n        }\n\n      case _actionTypes2.default.ADD_INTENT:\n        {\n          fieldUpdates = {\n            intents: addIntent(intents, action.intent)\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.CLEAR_INTENTS:\n        {\n          fieldUpdates = {\n            intents: clearIntents(intents, action.intent)\n          };\n\n          break;\n        }\n\n      case _actionTypes2.default.CHANGE:\n        {\n          return (0, _updateParentForms2.default)(state, localPath, function (parentForm) {\n            var formModelValue = (0, _getFormValue2.default)(parentForm);\n\n            if (!parentForm.$form) {\n              return _extends({}, customInitialFieldState, {\n                value: formModelValue,\n                initialValue: formModelValue\n              });\n            }\n\n            // If the form is invalid (due to async validity)\n            // but its fields are valid and the value has changed,\n            // the form should be \"valid\" again.\n            if ((!parentForm.$form.validity || typeof parentForm.$form.validity === 'boolean' || !Object.keys(parentForm.$form.validity).length) && !parentForm.$form.valid && (0, _isValid2.default)(parentForm, { async: false })) {\n              return {\n                value: formModelValue,\n                validity: true,\n                errors: false,\n                valid: true\n              };\n            }\n\n            return {\n              value: formModelValue\n            };\n          });\n        }\n\n      default:\n        return state;\n    }\n\n    if (action.clearIntents) {\n      fieldUpdates.intents = clearIntents(intents, action.clearIntents);\n    }\n\n    var updatedField = (0, _updateField2.default)(state, localPath, fieldUpdates);\n    var updatedSubFields = Object.keys(subFieldUpdates).length ? (0, _updateSubFields2.default)(updatedField, localPath, subFieldUpdates) : updatedField;\n    var updatedParentForms = parentFormUpdates ? (0, _updateParentForms2.default)(updatedSubFields, localPath, parentFormUpdates) : updatedSubFields;\n\n    return updatedParentForms;\n  };\n}\n\nexports.default = createFormActionsReducer();"]},"metadata":{},"sourceType":"script"}