{"ast":null,"code":"import _classCallCheck from\"/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _objectSpread from\"/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/*\n    Renders a spinning cube that shows random collections of logos that randomly\n    update at random intervals. Logos are provided by a REST api that is \n    managed by Redux.\n    \n    Logos API: https://api.lawrencemcdaniel.com/wp-json/wp/v2/posts?categories=43&_embed&per_page=100\n\n    The cube, which is pure CSS and HTML, was scaffolded from a D3 example that I liked, created by Noah Veltman. \n    Ironically, the D3 source code itself wasn't useful. I encountered a variety of challenges with using D3.js for this component. \n    Though all of these challenges were solvable, in the end it was most practical to leave the DOM manipulations to ReactJS. \n    You can review the GitHub commit history of this file to see the early versions of this component implemented with D3.js\n\n    Noah's original cube: https://bl.ocks.org/veltman/4c989172ac2f820b0b7267c53cb96975 \n    \n\n    The component life cycle is as follows:\n    =================================================\n\n    I. Animated cube rendering (approximately 1,500 ms):\n    This is intended to distract the site visitor for a moment while we pre-fetch the first set\n    of logo images (for slow internet connections). We initialize the cube w 6 locally-stored\n    and highly-optimized logos (one per cube side) that, incidentally, I most want visitors to see.\n    (React, Redux, Angular, Django, AWS, Wordpress)\n\n    II. Update infinitely:\n    Randomly show lots of other logos. The longer the site visitor stares at this logo cube\n    the better, because it buys time for the image pre-fetcher to download more \n    site content in the background. Don't be impressed however, I stole this idea from nytimes.com\n\n\n    Some of the challenges, and their solutions:\n    =================================================\n    A. Lack of impact\n    The logo cube is supposed to be a creative way of showcasing my most important\n    (self-proclaimed) technology skills to site visitors. Most visitors however,\n    will only see the cube for a couple of seconds and then move on to some other page.\n    Thus, a random selection of logos works at cross purposes to this design objective since \n    most of the logos pertain to lesser-known supporting technologies.\n\n    solution: I created a 2nd api feed consisting of six \"featured\" logos.\n    I initialize the cube with the featured logos, and then hold these\n    logos in place for 5 seconds before initiating the random logo replacements.\n    \n    B. Disappointing logo shuffle.\n    It bothered me that sometimes all six cube sides would display only\n    the logos of unimpressive technologies for an extended period of time.\n    I found myself staring at the cube anxiously waiting for a \"good\" \n    logo to appear.\n\n    solution: \n    I reserve one of the six cube sides for exclusively displaying\n    one of the six featured logos.\n\n    C. Reverse Rotation (aka \"Wagon Wheel\" Effect)\n    I had trouble visually tracking the motion of the original version of the cube's spinning animations.\n    The cube would sometimes appear to be spinning left-to-right, and other times right-to-left. In\n    the latter cases the cube appeared mal-constructed and disfigured. Here's a technical explanation\n    of the nature of this problem: https://en.wikipedia.org/wiki/Wagon-wheel_effect\n\n    solution:\n    First, i tinkered with the opacity of the cube sides so that the side that is supposed to be in front is brighter, \n    and the reverse side is darker. Secondly, adding the cube rendering helped a lot because the cube begins\n    as a 2-dimensional spinning square, which afterwards grows to become a cube. The 2D spinning image is easier for your\n    visual cortex to process, and the growth animation provides a way for your mind to bootstrap and retain what's\n    happening on-screen.\n\n    D. Screen flicker. \n    React mounts/unmounts components multiple times, often for \n    reasons that are external to the component. React also calls render()\n    several times during normal component initialization. Both of these are \n    problems for CSS animations because these end up getting killed in mid-animation and\n    restarted multiple times (ie screen flicker), which looks terrible.\n\n    solution: I fixed the screen flicker with a few different kinds of timers\n    that are intended to delay rendering the cube (and thus initiating the CSS\n    animations) until React has had enough time to get the home screen \n    completely setup.\n\n    E. Erratic Logo updates. \n    Logos change at random intervals. However, it looks bad if a logo is replaced too quickly. \n\n    solution: I added 6 timers to track the elapsed lifetime of each logo,\n    and then I only replace a logo if its been visible for a minimum\n    length of time.\n\n    F. Orphan Threads.\n    Launching the painter() method with a timer delay is tricky\n    because it is initiated on a new asynchronous background thread.\n    When the component mounts/unmounts very quickly, the threads lives on,\n    resulting in several painter() threads co-existing, which causes\n    the cube to update multitudes more frequently than I wanted.\n\n    solution: I fixed the threading issue by keeping track of, and explicitly killing \n    all background threads that I create.\n\n    G. Slow loading logos.\n    The cube itself is rendered purely in CSS and so always renders smoothly, but it\n    depends on a collection of around 75 logo images provided by the\n    REST api via Redux. On a slow internet connection you could see each new logo\n    downloading on the cube side, which looked terrible. \n\n    solution: \n    a.) i setup an image pre-fetcher inside of Redux, not just for\n    this logo cube but for the hundreds of other images on this site as\n    well.\n\n    b.) i store the first six logos locally so that these are included in the React\n    bundles and are delivered to the browser immediately.\n\n    c.) i web-optimized all of the logos to decrease network load.\n\n    d.) i make AWS Cloudfront gzip all of the images, which reduces an additional 30%\n    or so of network overhead.\n\n    H. Duplicate logos\n    It bothered me that the same logo would sometimes appears on two (or more)\n    sides.\n\n    solution: i added some \"no collision\" logic to prevent the random logo\n    selector from choosing any logos that are currently being displayed.\n\n    I. React Insomnia. \n    Every time the cube rendered, React would behave as if the site visitor had just\n    arrived to the site, even when this was not the case. For example, if a user lands \n    on the home page then they would see the glory of the Logo Cube. But if they navigated\n    to another page and later returned to the home page then they'd see then entire \n    construction of the cube, and the same 6 initialization logos.\n\n    solution: i push the component state to Redux, and disable the initial rendering animations\n    if the cube has already been rendered. More: https://medium.com/the-web-tub/managing-your-react-state-with-redux-affab72de4b1\n\n*/import React,{Component}from'react';import{connect}from'react-redux';import{bindActionCreators}from'redux';import*as Actions from'../../redux/ActionCreators';import{shuffleArray}from'../../shared/shuffle';import'./styles.css';var mapStateToProps=function mapStateToProps(state){return _objectSpread({},state);};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{actions:bindActionCreators(Actions,dispatch)};};var CubeSide=function CubeSide(props){var clsId=\"d3-side \"+props.side+\" \"+props.classes;var divId=\"cube-\"+props.side+\"-logo-div\";var divStyle={backgroundImage:\"url('\"+props.url+\"')\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{key:divId,className:clsId},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{key:divId+\"-logo\",className:\"logo\",style:divStyle}))));};var LogoCube=/*#__PURE__*/function(_Component){_inherits(LogoCube,_Component);var _super=_createSuper(LogoCube);function LogoCube(props){var _this;_classCallCheck(this,LogoCube);_this=_super.call(this,props);_this.getElapsedTime=_this.getElapsedTime.bind(_assertThisInitialized(_this));_this.getBackgroundUrl=_this.getBackgroundUrl.bind(_assertThisInitialized(_this));_this.setBackgroundUrl=_this.setBackgroundUrl.bind(_assertThisInitialized(_this));_this.getRandomSide=_this.getRandomSide.bind(_assertThisInitialized(_this));_this.getRandomLogo=_this.getRandomLogo.bind(_assertThisInitialized(_this));_this.getSerializedLogo=_this.getSerializedLogo.bind(_assertThisInitialized(_this));_this.isLogoCollision=_this.isLogoCollision.bind(_assertThisInitialized(_this));_this.repaint=_this.repaint.bind(_assertThisInitialized(_this));/* check for component state in Redux store */if(_this.props.logoCube.isSet){_this.state=_this.props.logoCube.state;}else{var d=new Date();/* grab a locally-stored set of six logos for initializing the cube sides */var initialLogos=_this.getInitialCubeLogos();_this.state={/* delay threads, to prevent the component from re-rendering if we're in mid-animation */repaintDelay:null,/* the current logo image URL for each of the 6 logos */cubeTopBackgroundUrl:_this.getSerializedLogo(initialLogos,0),cubeBottomBackgroundUrl:_this.getSerializedLogo(initialLogos,1),cubeLeftBackgroundUrl:_this.getSerializedLogo(initialLogos,2),cubeRightBackgroundUrl:_this.getSerializedLogo(initialLogos,3),cubeFrontBackgroundUrl:_this.getSerializedLogo(initialLogos,4),cubeBackBackgroundUrl:_this.getSerializedLogo(initialLogos,5),/* time stamps to track elapsed time of each logo image */constructed:d,cubeTop:d,cubeBottom:d,cubeLeft:d,cubeRight:d,cubeFront:d,cubeBack:d};}return _this;}_createClass(LogoCube,[{key:\"componentDidMount\",value:function componentDidMount(){/*  we nest repaint() inside of a timer so that we have a means\n            of killing the thread in cases where the component \n            quickly unmounts.\n        */var self=this;var myTimeout=setTimeout(function(){self.repaint();},100);this.setState({repaintDelay:myTimeout});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){/* kill any pending background threads that were\n        invoked in componentDidMount(). */clearTimeout(this.state.repaintDelay);clearTimeout(this.state.fetchDelay);/* send component state to Redux store */var state=this.state;this.props.actions.setLogoState({state:state});}},{key:\"render\",value:function render(){var sideClass=!this.props.logoCube.isSet?\"grow-side\":\"\";var capClass=!this.props.logoCube.isSet?\"fade-in\":\"\";return/*#__PURE__*/React.createElement(\"div\",{key:\"logo-cube\",className:\"d3-container mt-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d3-cube mt-5\"},/*#__PURE__*/React.createElement(CubeSide,{side:\"top\",url:this.getBackgroundUrl(\"top\"),classes:capClass}),/*#__PURE__*/React.createElement(CubeSide,{side:\"bottom\",url:this.getBackgroundUrl(\"bottom\"),classes:capClass}),/*#__PURE__*/React.createElement(CubeSide,{side:\"front\",url:this.getBackgroundUrl(\"front\"),classes:sideClass}),/*#__PURE__*/React.createElement(CubeSide,{side:\"back\",url:this.getBackgroundUrl(\"back\"),classes:sideClass}),/*#__PURE__*/React.createElement(CubeSide,{side:\"right\",url:this.getBackgroundUrl(\"right\"),classes:sideClass}),/*#__PURE__*/React.createElement(CubeSide,{side:\"left\",url:this.getBackgroundUrl(\"left\"),classes:sideClass})));}},{key:\"repaint\",value:function repaint(){/* place a random logo on a random side at a random point in time. */if(!this.props.specialties.isLoading){var side=this.getRandomSide();var logos=side===\"front\"?this.props.specialties.featured_logos:this.props.specialties.logos;var logo=this.getRandomLogo(logos);var elapsed=this.getElapsedTime(side);if(side!=null&&elapsed>2000){this.setBackgroundUrl(side,logo);}}var self=this;setTimeout(function(){self.repaint();},750*Math.random());}/* ---------------------------------------------------------------\n        Hereon, the drudgerous grind of working with a six-sided object.  \n     * --------------------------------------------------------------- */},{key:\"getBackgroundUrl\",value:function getBackgroundUrl(side){var retval;switch(side){case\"top\":retval=this.state.cubeTopBackgroundUrl;break;case\"bottom\":retval=this.state.cubeBottomBackgroundUrl;break;case\"left\":retval=this.state.cubeLeftBackgroundUrl;break;case\"right\":retval=this.state.cubeRightBackgroundUrl;break;case\"front\":retval=this.state.cubeFrontBackgroundUrl;break;case\"back\":retval=this.state.cubeBackBackgroundUrl;break;default:retval=null;break;}return retval;}},{key:\"setBackgroundUrl\",value:function setBackgroundUrl(side,url){var d=new Date();var state;switch(side){case\"top\":state={cubeTopBackgroundUrl:url,cubeTop:d};break;case\"bottom\":state={cubeBottomBackgroundUrl:url,cubeBottom:d};break;case\"left\":state={cubeLeftBackgroundUrl:url,cubeLeft:d};break;case\"right\":state={cubeRightBackgroundUrl:url,cubeRight:d};break;case\"front\":state={cubeFrontBackgroundUrl:url,cubeFront:d};break;case\"back\":state={cubeBackBackgroundUrl:url,cubeBack:d};break;default:state={};break;}this.setState(state);}},{key:\"getElapsedTime\",value:function getElapsedTime(side){var d=new Date();switch(side){case\"top\":return d-this.state.cubeTop;case\"bottom\":return d-this.state.cubeBottom;case\"left\":return d-this.state.cubeLeft;case\"right\":return d-this.state.cubeRight;case\"front\":return d-this.state.cubeFront;case\"back\":return d-this.state.cubeBack;default:return d-this.state.constructed;}}},{key:\"getSerializedLogo\",value:function getSerializedLogo(logos,i){/* this handles the hopefully-rare case\n        where I might stupidly neglect to have 6 more\n        featured logos in the Wordpress api. */if(logos===null)return 0;if(i<logos.length){return logos[i];}}},{key:\"isLogoCollision\",value:function isLogoCollision(logo){switch(logo){case this.state.cubeTopBackgroundUrl:case this.state.cubeBottomBackgroundUrl:case this.state.cubeBackBackgroundUrl:case this.state.cubeFrontBackgroundUrl:case this.state.cubeLeftBackgroundUrl:case this.state.cubeRightBackgroundUrl:return true;default:return false;}}},{key:\"getRandomLogo\",value:function getRandomLogo(logos){if(logos===null)return null;var logo,i=0;do{logo=logos[Math.floor(Math.random()*logos.length)];i++;}while(this.isLogoCollision(logo)&&i<=logos.length);return logo;}},{key:\"getRandomSide\",value:function getRandomSide(){var side=Math.floor(Math.random()*6);switch(side){case 0:return\"top\";case 1:return\"bottom\";case 2:return\"left\";case 3:return\"right\";case 4:return\"front\";case 5:return\"back\";default:return null;}}},{key:\"getInitialCubeLogos\",value:function getInitialCubeLogos(){return shuffleArray(['assets/images/amazon-web-services.png','assets/images/django-logo-300x137.png','assets/images/open-edx.png','assets/images/react-logo-300x261.png','assets/images/Redux_Logo-300x80.png','assets/images/wordpress-100x161.png']);}}]);return LogoCube;}(Component);/* LogoCube component */export default connect(mapStateToProps,mapDispatchToProps)(LogoCube);","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/components/logoCube/Component.js"],"names":["React","Component","connect","bindActionCreators","Actions","shuffleArray","mapStateToProps","state","mapDispatchToProps","dispatch","actions","CubeSide","props","clsId","side","classes","divId","divStyle","backgroundImage","url","LogoCube","getElapsedTime","bind","getBackgroundUrl","setBackgroundUrl","getRandomSide","getRandomLogo","getSerializedLogo","isLogoCollision","repaint","logoCube","isSet","d","Date","initialLogos","getInitialCubeLogos","repaintDelay","cubeTopBackgroundUrl","cubeBottomBackgroundUrl","cubeLeftBackgroundUrl","cubeRightBackgroundUrl","cubeFrontBackgroundUrl","cubeBackBackgroundUrl","constructed","cubeTop","cubeBottom","cubeLeft","cubeRight","cubeFront","cubeBack","self","myTimeout","setTimeout","setState","clearTimeout","fetchDelay","setLogoState","sideClass","capClass","specialties","isLoading","logos","featured_logos","logo","elapsed","Math","random","retval","i","length","floor"],"mappings":"yhCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAoIA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,kBAAT,KAAmC,OAAnC,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,4BAAzB,CAEA,OAASC,YAAT,KAA6B,sBAA7B,CACA,MAAO,cAAP,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,0BACpBA,KADoB,GAA7B,CAGA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACtCC,OAAO,CAAEP,kBAAkB,CAACC,OAAD,CAAUK,QAAV,CADW,CAAf,EAA3B,CAIA,GAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAExB,GAAMC,CAAAA,KAAK,CAAG,WAAaD,KAAK,CAACE,IAAnB,CAA0B,GAA1B,CAAgCF,KAAK,CAACG,OAApD,CACA,GAAMC,CAAAA,KAAK,CAAG,QAAUJ,KAAK,CAACE,IAAhB,CAAuB,WAArC,CACA,GAAMG,CAAAA,QAAQ,CAAG,CACbC,eAAe,CAAE,QAAUN,KAAK,CAACO,GAAhB,CAAsB,IAD1B,CAAjB,CAIA,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,2BAAK,GAAG,CAAEH,KAAV,CACK,SAAS,CAAEH,KADhB,eAEI,4CACI,2BAAK,GAAG,CAAEG,KAAK,CAAC,OAAhB,CAAyB,SAAS,CAAC,MAAnC,CACI,KAAK,CAAEC,QADX,EADJ,CAFJ,CADJ,CADJ,CAYH,CApBD,C,GAsBMG,CAAAA,Q,oGAEF,kBAAYR,KAAZ,CAAmB,0CACf,uBAAMA,KAAN,EAEA,MAAKS,cAAL,CAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB,CACA,MAAKC,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,+BAAxB,CACA,MAAKE,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBF,IAAtB,+BAAxB,CACA,MAAKG,aAAL,CAAqB,MAAKA,aAAL,CAAmBH,IAAnB,+BAArB,CACA,MAAKI,aAAL,CAAqB,MAAKA,aAAL,CAAmBJ,IAAnB,+BAArB,CACA,MAAKK,iBAAL,CAAyB,MAAKA,iBAAL,CAAuBL,IAAvB,+BAAzB,CACA,MAAKM,eAAL,CAAuB,MAAKA,eAAL,CAAqBN,IAArB,+BAAvB,CACA,MAAKO,OAAL,CAAe,MAAKA,OAAL,CAAaP,IAAb,+BAAf,CAEA,8CACA,GAAI,MAAKV,KAAL,CAAWkB,QAAX,CAAoBC,KAAxB,CAA+B,CAC3B,MAAKxB,KAAL,CAAa,MAAKK,KAAL,CAAWkB,QAAX,CAAoBvB,KAAjC,CACH,CAFD,IAEO,CACH,GAAMyB,CAAAA,CAAC,CAAG,GAAIC,CAAAA,IAAJ,EAAV,CAEA,4EACA,GAAMC,CAAAA,YAAY,CAAG,MAAKC,mBAAL,EAArB,CAEA,MAAK5B,KAAL,CAAa,CAET,yFACA6B,YAAY,CAAE,IAHL,CAKT,wDACAC,oBAAoB,CAAE,MAAKV,iBAAL,CAAuBO,YAAvB,CAAqC,CAArC,CANb,CAOTI,uBAAuB,CAAE,MAAKX,iBAAL,CAAuBO,YAAvB,CAAqC,CAArC,CAPhB,CAQTK,qBAAqB,CAAE,MAAKZ,iBAAL,CAAuBO,YAAvB,CAAqC,CAArC,CARd,CASTM,sBAAsB,CAAE,MAAKb,iBAAL,CAAuBO,YAAvB,CAAqC,CAArC,CATf,CAUTO,sBAAsB,CAAE,MAAKd,iBAAL,CAAuBO,YAAvB,CAAqC,CAArC,CAVf,CAWTQ,qBAAqB,CAAE,MAAKf,iBAAL,CAAuBO,YAAvB,CAAqC,CAArC,CAXd,CAaT,0DACAS,WAAW,CAAEX,CAdJ,CAeTY,OAAO,CAAEZ,CAfA,CAgBTa,UAAU,CAAEb,CAhBH,CAiBTc,QAAQ,CAAEd,CAjBD,CAkBTe,SAAS,CAAEf,CAlBF,CAmBTgB,SAAS,CAAEhB,CAnBF,CAoBTiB,QAAQ,CAAEjB,CApBD,CAAb,CAsBH,CA3Cc,aA4ClB,C,kFAEmB,CAChB;;;UAKA,GAAMkB,CAAAA,IAAI,CAAG,IAAb,CACA,GAAMC,CAAAA,SAAS,CAAGC,UAAU,CAAC,UAAW,CACpCF,IAAI,CAACrB,OAAL,GACH,CAF2B,CAEzB,GAFyB,CAA5B,CAGA,KAAKwB,QAAL,CAAc,CACVjB,YAAY,CAAEe,SADJ,CAAd,EAIH,C,mEAEsB,CACnB;0CAEAG,YAAY,CAAC,KAAK/C,KAAL,CAAW6B,YAAZ,CAAZ,CACAkB,YAAY,CAAC,KAAK/C,KAAL,CAAWgD,UAAZ,CAAZ,CAEA,yCACA,GAAMhD,CAAAA,KAAK,CAAG,KAAKA,KAAnB,CACA,KAAKK,KAAL,CAAWF,OAAX,CAAmB8C,YAAnB,CAAgC,CAACjD,KAAK,CAALA,KAAD,CAAhC,EACH,C,uCAEQ,CACL,GAAMkD,CAAAA,SAAS,CAAG,CAAC,KAAK7C,KAAL,CAAWkB,QAAX,CAAoBC,KAArB,CAA6B,WAA7B,CAA0C,EAA5D,CACA,GAAM2B,CAAAA,QAAQ,CAAG,CAAC,KAAK9C,KAAL,CAAWkB,QAAX,CAAoBC,KAArB,CAA6B,SAA7B,CAAwC,EAAzD,CAEA,mBACI,2BAAK,GAAG,CAAC,WAAT,CAAqB,SAAS,CAAC,mBAA/B,eACI,2BAAK,SAAS,CAAC,cAAf,eACI,oBAAC,QAAD,EAAU,IAAI,CAAC,KAAf,CAAqB,GAAG,CAAE,KAAKR,gBAAL,CAAsB,KAAtB,CAA1B,CAAwD,OAAO,CAAEmC,QAAjE,EADJ,cAEI,oBAAC,QAAD,EAAU,IAAI,CAAC,QAAf,CAAwB,GAAG,CAAE,KAAKnC,gBAAL,CAAsB,QAAtB,CAA7B,CAA8D,OAAO,CAAEmC,QAAvE,EAFJ,cAGI,oBAAC,QAAD,EAAU,IAAI,CAAC,OAAf,CAAuB,GAAG,CAAE,KAAKnC,gBAAL,CAAsB,OAAtB,CAA5B,CAA4D,OAAO,CAAEkC,SAArE,EAHJ,cAII,oBAAC,QAAD,EAAU,IAAI,CAAC,MAAf,CAAsB,GAAG,CAAE,KAAKlC,gBAAL,CAAsB,MAAtB,CAA3B,CAA0D,OAAO,CAAEkC,SAAnE,EAJJ,cAKI,oBAAC,QAAD,EAAU,IAAI,CAAC,OAAf,CAAuB,GAAG,CAAE,KAAKlC,gBAAL,CAAsB,OAAtB,CAA5B,CAA4D,OAAO,CAAEkC,SAArE,EALJ,cAMI,oBAAC,QAAD,EAAU,IAAI,CAAC,MAAf,CAAsB,GAAG,CAAE,KAAKlC,gBAAL,CAAsB,MAAtB,CAA3B,CAA0D,OAAO,CAAEkC,SAAnE,EANJ,CADJ,CADJ,CAYH,C,yCAES,CACN,qEACA,GAAI,CAAC,KAAK7C,KAAL,CAAW+C,WAAX,CAAuBC,SAA5B,CAAuC,CAEnC,GAAM9C,CAAAA,IAAI,CAAG,KAAKW,aAAL,EAAb,CACA,GAAMoC,CAAAA,KAAK,CAAI/C,IAAI,GAAK,OAAV,CAAqB,KAAKF,KAAL,CAAW+C,WAAX,CAAuBG,cAA5C,CAA4D,KAAKlD,KAAL,CAAW+C,WAAX,CAAuBE,KAAjG,CACA,GAAME,CAAAA,IAAI,CAAG,KAAKrC,aAAL,CAAmBmC,KAAnB,CAAb,CACA,GAAMG,CAAAA,OAAO,CAAG,KAAK3C,cAAL,CAAoBP,IAApB,CAAhB,CACA,GAAIA,IAAI,EAAI,IAAR,EAAgBkD,OAAO,CAAG,IAA9B,CAAoC,CAChC,KAAKxC,gBAAL,CAAsBV,IAAtB,CAA4BiD,IAA5B,EACH,CAEJ,CAED,GAAMb,CAAAA,IAAI,CAAG,IAAb,CACAE,UAAU,CAAC,UAAW,CAClBF,IAAI,CAACrB,OAAL,GACH,CAFS,CAEP,IAAMoC,IAAI,CAACC,MAAL,EAFC,CAAV,CAIH,CAED;;mIAGiBpD,I,CAAM,CACnB,GAAIqD,CAAAA,MAAJ,CACA,OAAOrD,IAAP,EACI,IAAK,KAAL,CAAYqD,MAAM,CAAG,KAAK5D,KAAL,CAAW8B,oBAApB,CAA0C,MACtD,IAAK,QAAL,CAAe8B,MAAM,CAAI,KAAK5D,KAAL,CAAW+B,uBAArB,CAA8C,MAC7D,IAAK,MAAL,CAAa6B,MAAM,CAAI,KAAK5D,KAAL,CAAWgC,qBAArB,CAA4C,MACzD,IAAK,OAAL,CAAc4B,MAAM,CAAI,KAAK5D,KAAL,CAAWiC,sBAArB,CAA6C,MAC3D,IAAK,OAAL,CAAc2B,MAAM,CAAI,KAAK5D,KAAL,CAAWkC,sBAArB,CAA6C,MAC3D,IAAK,MAAL,CAAa0B,MAAM,CAAI,KAAK5D,KAAL,CAAWmC,qBAArB,CAA4C,MACzD,QAASyB,MAAM,CAAG,IAAT,CAAe,MAP5B,CASA,MAAOA,CAAAA,MAAP,CACH,C,0DAEgBrD,I,CAAMK,G,CAAK,CACxB,GAAMa,CAAAA,CAAC,CAAG,GAAIC,CAAAA,IAAJ,EAAV,CAEA,GAAI1B,CAAAA,KAAJ,CACA,OAAOO,IAAP,EACI,IAAK,KAAL,CAAYP,KAAK,CAAG,CAAC8B,oBAAoB,CAAElB,GAAvB,CAA4ByB,OAAO,CAAEZ,CAArC,CAAR,CAAiD,MAC7D,IAAK,QAAL,CAAezB,KAAK,CAAG,CAAC+B,uBAAuB,CAAEnB,GAA1B,CAA+B0B,UAAU,CAAEb,CAA3C,CAAR,CAAuD,MACtE,IAAK,MAAL,CAAazB,KAAK,CAAG,CAACgC,qBAAqB,CAAEpB,GAAxB,CAA6B2B,QAAQ,CAAEd,CAAvC,CAAR,CAAmD,MAChE,IAAK,OAAL,CAAczB,KAAK,CAAG,CAACiC,sBAAsB,CAAErB,GAAzB,CAA8B4B,SAAS,CAAEf,CAAzC,CAAR,CAAqD,MACnE,IAAK,OAAL,CAAczB,KAAK,CAAG,CAACkC,sBAAsB,CAAEtB,GAAzB,CAA8B6B,SAAS,CAAEhB,CAAzC,CAAR,CAAqD,MACnE,IAAK,MAAL,CAAazB,KAAK,CAAG,CAACmC,qBAAqB,CAAEvB,GAAxB,CAA6B8B,QAAQ,CAAEjB,CAAvC,CAAR,CAAmD,MAChE,QAASzB,KAAK,CAAG,EAAR,CAAY,MAPzB,CASA,KAAK8C,QAAL,CAAc9C,KAAd,EACH,C,sDAEcO,I,CAAM,CACjB,GAAMkB,CAAAA,CAAC,CAAG,GAAIC,CAAAA,IAAJ,EAAV,CACA,OAAOnB,IAAP,EACI,IAAK,KAAL,CAAY,MAAOkB,CAAAA,CAAC,CAAG,KAAKzB,KAAL,CAAWqC,OAAtB,CACZ,IAAK,QAAL,CAAe,MAAOZ,CAAAA,CAAC,CAAG,KAAKzB,KAAL,CAAWsC,UAAtB,CACf,IAAK,MAAL,CAAa,MAAOb,CAAAA,CAAC,CAAG,KAAKzB,KAAL,CAAWuC,QAAtB,CACb,IAAK,OAAL,CAAc,MAAOd,CAAAA,CAAC,CAAG,KAAKzB,KAAL,CAAWwC,SAAtB,CACd,IAAK,OAAL,CAAc,MAAOf,CAAAA,CAAC,CAAG,KAAKzB,KAAL,CAAWyC,SAAtB,CACd,IAAK,MAAL,CAAa,MAAOhB,CAAAA,CAAC,CAAG,KAAKzB,KAAL,CAAW0C,QAAtB,CACb,QAAS,MAAOjB,CAAAA,CAAC,CAAG,KAAKzB,KAAL,CAAWoC,WAAtB,CAPb,CASH,C,4DAEiBkB,K,CAAOO,C,CAAG,CACxB;;+CAIA,GAAIP,KAAK,GAAK,IAAd,CAAoB,MAAO,EAAP,CAEpB,GAAIO,CAAC,CAAGP,KAAK,CAACQ,MAAd,CAAsB,CAClB,MAAOR,CAAAA,KAAK,CAACO,CAAD,CAAZ,CACH,CACJ,C,wDAEeL,I,CAAM,CAElB,OAAQA,IAAR,EACI,IAAK,MAAKxD,KAAL,CAAW8B,oBAAhB,CACA,IAAK,MAAK9B,KAAL,CAAW+B,uBAAhB,CACA,IAAK,MAAK/B,KAAL,CAAWmC,qBAAhB,CACA,IAAK,MAAKnC,KAAL,CAAWkC,sBAAhB,CACA,IAAK,MAAKlC,KAAL,CAAWgC,qBAAhB,CACA,IAAK,MAAKhC,KAAL,CAAWiC,sBAAhB,CACI,MAAO,KAAP,CACJ,QACI,MAAO,MAAP,CATR,CAYH,C,oDAEaqB,K,CAAO,CACjB,GAAIA,KAAK,GAAK,IAAd,CAAoB,MAAO,KAAP,CAEpB,GAAIE,CAAAA,IAAJ,CAAUK,CAAC,CAAG,CAAd,CACA,EAAG,CACCL,IAAI,CAAGF,KAAK,CAACI,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACC,MAAL,GAAgBL,KAAK,CAACQ,MAAjC,CAAD,CAAZ,CACAD,CAAC,GACJ,CAHD,MAGS,KAAKxC,eAAL,CAAqBmC,IAArB,GAA+BK,CAAC,EAAIP,KAAK,CAACQ,MAHnD,EAIA,MAAON,CAAAA,IAAP,CACH,C,qDAEe,CACZ,GAAMjD,CAAAA,IAAI,CAAGmD,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACC,MAAL,GAAgB,CAA3B,CAAb,CACA,OAAOpD,IAAP,EACI,IAAK,EAAL,CAAQ,MAAO,KAAP,CACR,IAAK,EAAL,CAAQ,MAAO,QAAP,CACR,IAAK,EAAL,CAAQ,MAAO,MAAP,CACR,IAAK,EAAL,CAAQ,MAAO,OAAP,CACR,IAAK,EAAL,CAAQ,MAAO,OAAP,CACR,IAAK,EAAL,CAAQ,MAAO,MAAP,CACR,QAAS,MAAO,KAAP,CAPb,CASH,C,iEAEqB,CAClB,MAAOT,CAAAA,YAAY,CAAC,CAChB,uCADgB,CAEhB,uCAFgB,CAGhB,4BAHgB,CAIhB,sCAJgB,CAKhB,qCALgB,CAMhB,qCANgB,CAAD,CAAnB,CAQH,C,sBA7NkBJ,S,EA8NrB,wBAEF,cAAeC,CAAAA,OAAO,CAACI,eAAD,CAAkBE,kBAAlB,CAAP,CAA6CY,QAA7C,CAAf","sourcesContent":["/*\n    Renders a spinning cube that shows random collections of logos that randomly\n    update at random intervals. Logos are provided by a REST api that is \n    managed by Redux.\n    \n    Logos API: https://api.lawrencemcdaniel.com/wp-json/wp/v2/posts?categories=43&_embed&per_page=100\n\n    The cube, which is pure CSS and HTML, was scaffolded from a D3 example that I liked, created by Noah Veltman. \n    Ironically, the D3 source code itself wasn't useful. I encountered a variety of challenges with using D3.js for this component. \n    Though all of these challenges were solvable, in the end it was most practical to leave the DOM manipulations to ReactJS. \n    You can review the GitHub commit history of this file to see the early versions of this component implemented with D3.js\n\n    Noah's original cube: https://bl.ocks.org/veltman/4c989172ac2f820b0b7267c53cb96975 \n    \n\n    The component life cycle is as follows:\n    =================================================\n\n    I. Animated cube rendering (approximately 1,500 ms):\n    This is intended to distract the site visitor for a moment while we pre-fetch the first set\n    of logo images (for slow internet connections). We initialize the cube w 6 locally-stored\n    and highly-optimized logos (one per cube side) that, incidentally, I most want visitors to see.\n    (React, Redux, Angular, Django, AWS, Wordpress)\n\n    II. Update infinitely:\n    Randomly show lots of other logos. The longer the site visitor stares at this logo cube\n    the better, because it buys time for the image pre-fetcher to download more \n    site content in the background. Don't be impressed however, I stole this idea from nytimes.com\n\n\n    Some of the challenges, and their solutions:\n    =================================================\n    A. Lack of impact\n    The logo cube is supposed to be a creative way of showcasing my most important\n    (self-proclaimed) technology skills to site visitors. Most visitors however,\n    will only see the cube for a couple of seconds and then move on to some other page.\n    Thus, a random selection of logos works at cross purposes to this design objective since \n    most of the logos pertain to lesser-known supporting technologies.\n\n    solution: I created a 2nd api feed consisting of six \"featured\" logos.\n    I initialize the cube with the featured logos, and then hold these\n    logos in place for 5 seconds before initiating the random logo replacements.\n    \n    B. Disappointing logo shuffle.\n    It bothered me that sometimes all six cube sides would display only\n    the logos of unimpressive technologies for an extended period of time.\n    I found myself staring at the cube anxiously waiting for a \"good\" \n    logo to appear.\n\n    solution: \n    I reserve one of the six cube sides for exclusively displaying\n    one of the six featured logos.\n\n    C. Reverse Rotation (aka \"Wagon Wheel\" Effect)\n    I had trouble visually tracking the motion of the original version of the cube's spinning animations.\n    The cube would sometimes appear to be spinning left-to-right, and other times right-to-left. In\n    the latter cases the cube appeared mal-constructed and disfigured. Here's a technical explanation\n    of the nature of this problem: https://en.wikipedia.org/wiki/Wagon-wheel_effect\n\n    solution:\n    First, i tinkered with the opacity of the cube sides so that the side that is supposed to be in front is brighter, \n    and the reverse side is darker. Secondly, adding the cube rendering helped a lot because the cube begins\n    as a 2-dimensional spinning square, which afterwards grows to become a cube. The 2D spinning image is easier for your\n    visual cortex to process, and the growth animation provides a way for your mind to bootstrap and retain what's\n    happening on-screen.\n\n    D. Screen flicker. \n    React mounts/unmounts components multiple times, often for \n    reasons that are external to the component. React also calls render()\n    several times during normal component initialization. Both of these are \n    problems for CSS animations because these end up getting killed in mid-animation and\n    restarted multiple times (ie screen flicker), which looks terrible.\n\n    solution: I fixed the screen flicker with a few different kinds of timers\n    that are intended to delay rendering the cube (and thus initiating the CSS\n    animations) until React has had enough time to get the home screen \n    completely setup.\n\n    E. Erratic Logo updates. \n    Logos change at random intervals. However, it looks bad if a logo is replaced too quickly. \n\n    solution: I added 6 timers to track the elapsed lifetime of each logo,\n    and then I only replace a logo if its been visible for a minimum\n    length of time.\n\n    F. Orphan Threads.\n    Launching the painter() method with a timer delay is tricky\n    because it is initiated on a new asynchronous background thread.\n    When the component mounts/unmounts very quickly, the threads lives on,\n    resulting in several painter() threads co-existing, which causes\n    the cube to update multitudes more frequently than I wanted.\n\n    solution: I fixed the threading issue by keeping track of, and explicitly killing \n    all background threads that I create.\n\n    G. Slow loading logos.\n    The cube itself is rendered purely in CSS and so always renders smoothly, but it\n    depends on a collection of around 75 logo images provided by the\n    REST api via Redux. On a slow internet connection you could see each new logo\n    downloading on the cube side, which looked terrible. \n\n    solution: \n    a.) i setup an image pre-fetcher inside of Redux, not just for\n    this logo cube but for the hundreds of other images on this site as\n    well.\n\n    b.) i store the first six logos locally so that these are included in the React\n    bundles and are delivered to the browser immediately.\n\n    c.) i web-optimized all of the logos to decrease network load.\n\n    d.) i make AWS Cloudfront gzip all of the images, which reduces an additional 30%\n    or so of network overhead.\n\n    H. Duplicate logos\n    It bothered me that the same logo would sometimes appears on two (or more)\n    sides.\n\n    solution: i added some \"no collision\" logic to prevent the random logo\n    selector from choosing any logos that are currently being displayed.\n\n    I. React Insomnia. \n    Every time the cube rendered, React would behave as if the site visitor had just\n    arrived to the site, even when this was not the case. For example, if a user lands \n    on the home page then they would see the glory of the Logo Cube. But if they navigated\n    to another page and later returned to the home page then they'd see then entire \n    construction of the cube, and the same 6 initialization logos.\n\n    solution: i push the component state to Redux, and disable the initial rendering animations\n    if the cube has already been rendered. More: https://medium.com/the-web-tub/managing-your-react-state-with-redux-affab72de4b1\n\n*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as Actions from '../../redux/ActionCreators';\n\nimport { shuffleArray } from '../../shared/shuffle';\nimport './styles.css';\n\nconst mapStateToProps = state => ({\n      ...state\n});\nconst mapDispatchToProps = (dispatch) => ({\n    actions: bindActionCreators(Actions, dispatch)\n});\n\nconst CubeSide = (props) => {\n\n    const clsId = \"d3-side \" + props.side + \" \" + props.classes;\n    const divId = \"cube-\" + props.side + \"-logo-div\";\n    const divStyle = {\n        backgroundImage: \"url('\" + props.url + \"')\"\n      }\n\n    return(\n        <React.Fragment >\n            <div key={divId}\n                 className={clsId}>\n                <div>\n                    <div key={divId+\"-logo\"} className=\"logo\" \n                        style={divStyle}>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nclass LogoCube extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.getElapsedTime = this.getElapsedTime.bind(this);\n        this.getBackgroundUrl = this.getBackgroundUrl.bind(this);\n        this.setBackgroundUrl = this.setBackgroundUrl.bind(this);\n        this.getRandomSide = this.getRandomSide.bind(this);\n        this.getRandomLogo = this.getRandomLogo.bind(this);\n        this.getSerializedLogo = this.getSerializedLogo.bind(this);\n        this.isLogoCollision = this.isLogoCollision.bind(this);\n        this.repaint = this.repaint.bind(this);\n\n        /* check for component state in Redux store */\n        if (this.props.logoCube.isSet) {\n            this.state = this.props.logoCube.state;\n        } else {\n            const d = new Date();\n\n            /* grab a locally-stored set of six logos for initializing the cube sides */\n            const initialLogos = this.getInitialCubeLogos();\n    \n            this.state = {\n\n                /* delay threads, to prevent the component from re-rendering if we're in mid-animation */\n                repaintDelay: null,\n    \n                /* the current logo image URL for each of the 6 logos */\n                cubeTopBackgroundUrl: this.getSerializedLogo(initialLogos, 0),\n                cubeBottomBackgroundUrl: this.getSerializedLogo(initialLogos, 1),\n                cubeLeftBackgroundUrl: this.getSerializedLogo(initialLogos, 2),\n                cubeRightBackgroundUrl: this.getSerializedLogo(initialLogos, 3),\n                cubeFrontBackgroundUrl: this.getSerializedLogo(initialLogos, 4),\n                cubeBackBackgroundUrl: this.getSerializedLogo(initialLogos, 5),\n    \n                /* time stamps to track elapsed time of each logo image */\n                constructed: d,\n                cubeTop: d,\n                cubeBottom: d,\n                cubeLeft: d,\n                cubeRight: d,\n                cubeFront: d,\n                cubeBack: d    \n              };\n        }\n    }\n\n    componentDidMount() {\n        /*  we nest repaint() inside of a timer so that we have a means\n            of killing the thread in cases where the component \n            quickly unmounts.\n        */\n\n        const self = this;\n        const myTimeout = setTimeout(function() {\n            self.repaint();\n        }, 100);    \n        this.setState({\n            repaintDelay: myTimeout\n        });\n\n    }\n\n    componentWillUnmount() {\n        /* kill any pending background threads that were\n        invoked in componentDidMount(). */\n        clearTimeout(this.state.repaintDelay);\n        clearTimeout(this.state.fetchDelay);\n\n        /* send component state to Redux store */\n        const state = this.state;\n        this.props.actions.setLogoState({state});\n    }\n    \n    render() {\n        const sideClass = !this.props.logoCube.isSet ? \"grow-side\": \"\" ;\n        const capClass = !this.props.logoCube.isSet ? \"fade-in\": \"\" ;\n\n        return(\n            <div key=\"logo-cube\" className=\"d3-container mt-0\">\n                <div className=\"d3-cube mt-5\">\n                    <CubeSide side=\"top\" url={this.getBackgroundUrl(\"top\")} classes={capClass} />\n                    <CubeSide side=\"bottom\" url={this.getBackgroundUrl(\"bottom\")} classes={capClass} />\n                    <CubeSide side=\"front\" url={this.getBackgroundUrl(\"front\")} classes={sideClass} />\n                    <CubeSide side=\"back\" url={this.getBackgroundUrl(\"back\")} classes={sideClass} />\n                    <CubeSide side=\"right\" url={this.getBackgroundUrl(\"right\")} classes={sideClass} />\n                    <CubeSide side=\"left\" url={this.getBackgroundUrl(\"left\")} classes={sideClass} />\n                </div>\n            </div>\n        );\n    }\n\n    repaint() {\n        /* place a random logo on a random side at a random point in time. */\n        if (!this.props.specialties.isLoading) {\n\n            const side = this.getRandomSide();\n            const logos = (side === \"front\") ? this.props.specialties.featured_logos: this.props.specialties.logos;\n            const logo = this.getRandomLogo(logos);\n            const elapsed = this.getElapsedTime(side);\n            if (side != null && elapsed > 2000) {\n                this.setBackgroundUrl(side, logo);\n            }\n\n        }\n    \n        const self = this;\n        setTimeout(function() {\n            self.repaint();\n        }, 750 * Math.random());   \n      \n    }\n\n    /* ---------------------------------------------------------------\n        Hereon, the drudgerous grind of working with a six-sided object.  \n     * --------------------------------------------------------------- */\n    getBackgroundUrl(side) {\n        let retval;\n        switch(side) {\n            case \"top\": retval = this.state.cubeTopBackgroundUrl; break;\n            case \"bottom\": retval =  this.state.cubeBottomBackgroundUrl; break;\n            case \"left\": retval =  this.state.cubeLeftBackgroundUrl; break;\n            case \"right\": retval =  this.state.cubeRightBackgroundUrl; break;\n            case \"front\": retval =  this.state.cubeFrontBackgroundUrl; break;\n            case \"back\": retval =  this.state.cubeBackBackgroundUrl; break;\n            default: retval = null; break;\n        }\n        return retval;\n    }\n\n    setBackgroundUrl(side, url) {\n        const d = new Date();\n\n        let state;\n        switch(side) {\n            case \"top\": state = {cubeTopBackgroundUrl: url, cubeTop: d}; break;\n            case \"bottom\": state = {cubeBottomBackgroundUrl: url, cubeBottom: d}; break;\n            case \"left\": state = {cubeLeftBackgroundUrl: url, cubeLeft: d}; break;\n            case \"right\": state = {cubeRightBackgroundUrl: url, cubeRight: d}; break;\n            case \"front\": state = {cubeFrontBackgroundUrl: url, cubeFront: d}; break;\n            case \"back\": state = {cubeBackBackgroundUrl: url, cubeBack: d}; break;\n            default: state = {}; break;\n        }\n        this.setState(state);\n    }\n\n    getElapsedTime(side) {\n        const d = new Date();\n        switch(side) {\n            case \"top\": return d - this.state.cubeTop;\n            case \"bottom\": return d - this.state.cubeBottom;\n            case \"left\": return d - this.state.cubeLeft;\n            case \"right\": return d - this.state.cubeRight;\n            case \"front\": return d - this.state.cubeFront;\n            case \"back\": return d - this.state.cubeBack;\n            default: return d - this.state.constructed;\n        }\n    }\n      \n    getSerializedLogo(logos, i) {\n        /* this handles the hopefully-rare case\n        where I might stupidly neglect to have 6 more\n        featured logos in the Wordpress api. */\n\n        if (logos === null) return 0;\n\n        if (i < logos.length) {\n            return logos[i];\n        }\n    }\n\n    isLogoCollision(logo) {\n\n        switch (logo) {\n            case this.state.cubeTopBackgroundUrl:\n            case this.state.cubeBottomBackgroundUrl:\n            case this.state.cubeBackBackgroundUrl:\n            case this.state.cubeFrontBackgroundUrl:\n            case this.state.cubeLeftBackgroundUrl:\n            case this.state.cubeRightBackgroundUrl:\n                return true;\n            default:\n                return false;\n        }\n\n    }\n\n    getRandomLogo(logos) {\n        if (logos === null) return null;\n\n        var logo, i = 0;\n        do {\n            logo = logos[Math.floor(Math.random() * logos.length)];\n            i++;\n        } while (this.isLogoCollision(logo) && (i <= logos.length))\n        return logo;\n    }\n\n    getRandomSide() {\n        const side = Math.floor(Math.random() * 6);\n        switch(side) {\n            case 0: return \"top\";\n            case 1: return \"bottom\";\n            case 2: return \"left\";\n            case 3: return \"right\";\n            case 4: return \"front\";\n            case 5: return \"back\";\n            default: return null;\n        }\n    }\n\n    getInitialCubeLogos() {\n        return shuffleArray([\n            'assets/images/amazon-web-services.png',\n            'assets/images/django-logo-300x137.png',\n            'assets/images/open-edx.png',\n            'assets/images/react-logo-300x261.png',\n            'assets/images/Redux_Logo-300x80.png',\n            'assets/images/wordpress-100x161.png'\n        ]);\n    }\n} /* LogoCube component */\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoCube);\n\n"]},"metadata":{},"sourceType":"module"}