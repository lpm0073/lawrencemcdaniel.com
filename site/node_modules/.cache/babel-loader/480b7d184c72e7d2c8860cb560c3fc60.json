{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { wpGetFeaturedImage } from '../shared/wpGetFeaturedImage';\nimport { shuffleArray } from '../shared/shuffle';\nexport const Specialties = (state = {\n  isLoading: true,\n  errMess: null,\n  items: [],\n  logos: [],\n  featured_logos: []\n}, action) => {\n  function extractUrls() {\n    const posts = action.payload;\n    const logos = shuffleArray(posts.map((post, indx) => {\n      return wpGetFeaturedImage(post, \"medium\");\n    }));\n    const featured_logos = shuffleArray(posts.filter((post, indx) => {\n      for (var i = 0; i < post.categories.length; i++) {\n        if (post.categories[i] === 48) {\n          /* featured technology */\n          return true;\n        }\n      }\n\n      return false;\n    }).map((featuredPost, indx) => {\n      return wpGetFeaturedImage(featuredPost, \"medium\");\n    }));\n    return {\n      logos: logos,\n      featured_logos: featured_logos\n    };\n  }\n\n  switch (action.type) {\n    case ActionTypes.ADD_SPECIALTIES:\n      const parsed_urls = extractUrls();\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        logos: parsed_urls.logos,\n        featured_logos: parsed_urls.featured_logos,\n        items: action.payload\n      };\n\n    case ActionTypes.SPECIALTIES_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        logos: null,\n        featured_logos: null,\n        items: []\n      };\n\n    case ActionTypes.SPECIALTIES_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        logos: null,\n        featured_logos: null,\n        items: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/redux/specialties.js"],"names":["ActionTypes","wpGetFeaturedImage","shuffleArray","Specialties","state","isLoading","errMess","items","logos","featured_logos","action","extractUrls","posts","payload","map","post","indx","filter","i","categories","length","featuredPost","type","ADD_SPECIALTIES","parsed_urls","SPECIALTIES_LOADING","SPECIALTIES_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAGA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAChCC,EAAAA,SAAS,EAAE,IADqB;AAEhCC,EAAAA,OAAO,EAAE,IAFuB;AAGhCC,EAAAA,KAAK,EAAE,EAHyB;AAIhCC,EAAAA,KAAK,EAAE,EAJyB;AAKhCC,EAAAA,cAAc,EAAE;AALgB,CAAT,EAMpBC,MANoB,KAMT;AAEd,WAASC,WAAT,GAAuB;AAEf,UAAMC,KAAK,GAAGF,MAAM,CAACG,OAArB;AACA,UAAML,KAAK,GAAGN,YAAY,CAACU,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACjD,aAAOf,kBAAkB,CAACc,IAAD,EAAO,QAAP,CAAzB;AACH,KAF0B,CAAD,CAA1B;AAIA,UAAMN,cAAc,GAAIP,YAAY,CAACU,KAAK,CAACK,MAAN,CAAa,CAACF,IAAD,EAAOC,IAAP,KAAgB;AAC9D,WAAK,IAAIE,CAAC,GAAC,CAAX,EAAeA,CAAC,GAAGH,IAAI,CAACI,UAAL,CAAgBC,MAAnC,EAA4CF,CAAC,EAA7C,EAAiD;AAC7C,YAAIH,IAAI,CAACI,UAAL,CAAgBD,CAAhB,MAAuB,EAA3B,EAA+B;AAAG;AAC9B,iBAAO,IAAP;AACH;AACJ;;AACD,aAAO,KAAP;AACH,KAPoC,EAOlCJ,GAPkC,CAO9B,CAACO,YAAD,EAAeL,IAAf,KAAwB;AAC3B,aAAOf,kBAAkB,CAACoB,YAAD,EAAe,QAAf,CAAzB;AACH,KAToC,CAAD,CAApC;AAWA,WAAO;AACHb,MAAAA,KAAK,EAAEA,KADJ;AAEHC,MAAAA,cAAc,EAAEA;AAFb,KAAP;AAIH;;AAGL,UAAOC,MAAM,CAACY,IAAd;AACI,SAAKtB,WAAW,CAACuB,eAAjB;AACI,YAAMC,WAAW,GAAGb,WAAW,EAA/B;AACA,aAAO,EAAC,GAAGP,KAAJ;AACHC,QAAAA,SAAS,EAAE,KADR;AAEHC,QAAAA,OAAO,EAAE,IAFN;AAGHE,QAAAA,KAAK,EAAEgB,WAAW,CAAChB,KAHhB;AAIHC,QAAAA,cAAc,EAAEe,WAAW,CAACf,cAJzB;AAKHF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AALX,OAAP;;AAQJ,SAAKb,WAAW,CAACyB,mBAAjB;AACI,aAAO,EAAC,GAAGrB,KAAJ;AACHC,QAAAA,SAAS,EAAE,IADR;AAEHC,QAAAA,OAAO,EAAE,IAFN;AAGHE,QAAAA,KAAK,EAAE,IAHJ;AAIHC,QAAAA,cAAc,EAAE,IAJb;AAKHF,QAAAA,KAAK,EAAE;AALJ,OAAP;;AAQJ,SAAKP,WAAW,CAAC0B,kBAAjB;AACI,aAAO,EAAC,GAAGtB,KAAJ;AACHC,QAAAA,SAAS,EAAE,KADR;AAEHC,QAAAA,OAAO,EAAEI,MAAM,CAACG,OAFb;AAGHL,QAAAA,KAAK,EAAE,IAHJ;AAIHC,QAAAA,cAAc,EAAE,IAJb;AAKHF,QAAAA,KAAK,EAAE;AALJ,OAAP;;AAQJ;AACI,aAAOH,KAAP;AA9BR;AAgCH,CAjEM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nimport { wpGetFeaturedImage } from '../shared/wpGetFeaturedImage';\nimport { shuffleArray } from '../shared/shuffle';\n\n\nexport const Specialties = (state = {\n    isLoading: true,\n    errMess: null,\n    items: [],\n    logos: [],\n    featured_logos: []\n    }, action) => {\n\n    function extractUrls() {\n\n            const posts = action.payload;\n            const logos = shuffleArray(posts.map((post, indx) => {\n                return wpGetFeaturedImage(post, \"medium\");\n            }));\n    \n            const featured_logos =  shuffleArray(posts.filter((post, indx) => {\n                for (var i=0 ; i < post.categories.length ; i++) {\n                    if (post.categories[i] === 48) {  /* featured technology */\n                        return true;\n                    }\n                }\n                return false;\n            }).map((featuredPost, indx) => {\n                return wpGetFeaturedImage(featuredPost, \"medium\");\n            }));\n    \n            return {\n                logos: logos,\n                featured_logos: featured_logos\n            };\n        }\n    \n    \n    switch(action.type) {\n        case ActionTypes.ADD_SPECIALTIES:\n            const parsed_urls = extractUrls();\n            return {...state, \n                isLoading: false, \n                errMess: null, \n                logos: parsed_urls.logos,  \n                featured_logos: parsed_urls.featured_logos,\n                items: action.payload\n            };\n\n        case ActionTypes.SPECIALTIES_LOADING:\n            return {...state, \n                isLoading: true, \n                errMess: null, \n                logos: null,\n                featured_logos: null,\n                items: []\n            };\n\n        case ActionTypes.SPECIALTIES_FAILED:\n            return {...state, \n                isLoading: false, \n                errMess: action.payload, \n                logos: null,\n                featured_logos: null,\n                items: []\n            };\n            \n        default: \n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}