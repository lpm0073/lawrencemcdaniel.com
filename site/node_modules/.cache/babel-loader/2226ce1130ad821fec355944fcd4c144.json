{"ast":null,"code":"import _objectSpread from\"/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as ActionTypes from'./ActionTypes';import{wpGetFeaturedImage}from'../shared/wpGetFeaturedImage';import{shuffleArray}from'../shared/shuffle';export var Specialties=function Specialties(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{isLoading:true,errMess:null,items:[],logos:[],featured_logos:[]};var action=arguments.length>1?arguments[1]:undefined;function extractUrls(){var posts=action.payload;var logos=shuffleArray(posts.map(function(post,indx){return wpGetFeaturedImage(post,\"medium\");}));var featured_logos=shuffleArray(posts.filter(function(post,indx){for(var i=0;i<post.categories.length;i++){if(post.categories[i]===48){/* featured technology */return true;}}return false;}).map(function(featuredPost,indx){return wpGetFeaturedImage(featuredPost,\"medium\");}));return{logos:logos,featured_logos:featured_logos};}switch(action.type){case ActionTypes.ADD_SPECIALTIES:var parsed_urls=extractUrls();return _objectSpread(_objectSpread({},state),{},{isLoading:false,errMess:null,logos:parsed_urls.logos,featured_logos:parsed_urls.featured_logos,items:action.payload});case ActionTypes.SPECIALTIES_LOADING:return _objectSpread(_objectSpread({},state),{},{isLoading:true,errMess:null,logos:[],featured_logos:[],items:[]});case ActionTypes.SPECIALTIES_FAILED:return _objectSpread(_objectSpread({},state),{},{isLoading:false,errMess:action.payload,logos:[],featured_logos:[],items:[]});default:return state;}};","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/redux/specialties.js"],"names":["ActionTypes","wpGetFeaturedImage","shuffleArray","Specialties","state","isLoading","errMess","items","logos","featured_logos","action","extractUrls","posts","payload","map","post","indx","filter","i","categories","length","featuredPost","type","ADD_SPECIALTIES","parsed_urls","SPECIALTIES_LOADING","SPECIALTIES_FAILED"],"mappings":"8KAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,OAASC,kBAAT,KAAmC,8BAAnC,CACA,OAASC,YAAT,KAA6B,mBAA7B,CAGA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAMT,IANUC,CAAAA,KAMV,2DANkB,CAChCC,SAAS,CAAE,IADqB,CAEhCC,OAAO,CAAE,IAFuB,CAGhCC,KAAK,CAAE,EAHyB,CAIhCC,KAAK,CAAE,EAJyB,CAKhCC,cAAc,CAAE,EALgB,CAMlB,IAAXC,CAAAA,MAAW,2CAEd,QAASC,CAAAA,WAAT,EAAuB,CAEf,GAAMC,CAAAA,KAAK,CAAGF,MAAM,CAACG,OAArB,CACA,GAAML,CAAAA,KAAK,CAAGN,YAAY,CAACU,KAAK,CAACE,GAAN,CAAU,SAACC,IAAD,CAAOC,IAAP,CAAgB,CACjD,MAAOf,CAAAA,kBAAkB,CAACc,IAAD,CAAO,QAAP,CAAzB,CACH,CAF0B,CAAD,CAA1B,CAIA,GAAMN,CAAAA,cAAc,CAAIP,YAAY,CAACU,KAAK,CAACK,MAAN,CAAa,SAACF,IAAD,CAAOC,IAAP,CAAgB,CAC9D,IAAK,GAAIE,CAAAA,CAAC,CAAC,CAAX,CAAeA,CAAC,CAAGH,IAAI,CAACI,UAAL,CAAgBC,MAAnC,CAA4CF,CAAC,EAA7C,CAAiD,CAC7C,GAAIH,IAAI,CAACI,UAAL,CAAgBD,CAAhB,IAAuB,EAA3B,CAA+B,CAAG,yBAC9B,MAAO,KAAP,CACH,CACJ,CACD,MAAO,MAAP,CACH,CAPoC,EAOlCJ,GAPkC,CAO9B,SAACO,YAAD,CAAeL,IAAf,CAAwB,CAC3B,MAAOf,CAAAA,kBAAkB,CAACoB,YAAD,CAAe,QAAf,CAAzB,CACH,CAToC,CAAD,CAApC,CAWA,MAAO,CACHb,KAAK,CAAEA,KADJ,CAEHC,cAAc,CAAEA,cAFb,CAAP,CAIH,CAGL,OAAOC,MAAM,CAACY,IAAd,EACI,IAAKtB,CAAAA,WAAW,CAACuB,eAAjB,CACI,GAAMC,CAAAA,WAAW,CAAGb,WAAW,EAA/B,CACA,sCACOP,KADP,MAEIC,SAAS,CAAE,KAFf,CAGIC,OAAO,CAAE,IAHb,CAIIE,KAAK,CAAEgB,WAAW,CAAChB,KAJvB,CAKIC,cAAc,CAAEe,WAAW,CAACf,cALhC,CAMIF,KAAK,CAAEG,MAAM,CAACG,OANlB,GASJ,IAAKb,CAAAA,WAAW,CAACyB,mBAAjB,CACI,sCACOrB,KADP,MAEIC,SAAS,CAAE,IAFf,CAGIC,OAAO,CAAE,IAHb,CAIIE,KAAK,CAAE,EAJX,CAKIC,cAAc,CAAE,EALpB,CAMIF,KAAK,CAAE,EANX,GASJ,IAAKP,CAAAA,WAAW,CAAC0B,kBAAjB,CACI,sCACOtB,KADP,MAEIC,SAAS,CAAE,KAFf,CAGIC,OAAO,CAAEI,MAAM,CAACG,OAHpB,CAIIL,KAAK,CAAE,EAJX,CAKIC,cAAc,CAAE,EALpB,CAMIF,KAAK,CAAE,EANX,GASJ,QACI,MAAOH,CAAAA,KAAP,CAjCR,CAmCH,CApEM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nimport { wpGetFeaturedImage } from '../shared/wpGetFeaturedImage';\nimport { shuffleArray } from '../shared/shuffle';\n\n\nexport const Specialties = (state = {\n    isLoading: true,\n    errMess: null,\n    items: [],\n    logos: [],\n    featured_logos: []\n    }, action) => {\n\n    function extractUrls() {\n\n            const posts = action.payload;\n            const logos = shuffleArray(posts.map((post, indx) => {\n                return wpGetFeaturedImage(post, \"medium\");\n            }));\n    \n            const featured_logos =  shuffleArray(posts.filter((post, indx) => {\n                for (var i=0 ; i < post.categories.length ; i++) {\n                    if (post.categories[i] === 48) {  /* featured technology */\n                        return true;\n                    }\n                }\n                return false;\n            }).map((featuredPost, indx) => {\n                return wpGetFeaturedImage(featuredPost, \"medium\");\n            }));\n    \n            return {\n                logos: logos,\n                featured_logos: featured_logos\n            };\n        }\n    \n    \n    switch(action.type) {\n        case ActionTypes.ADD_SPECIALTIES:\n            const parsed_urls = extractUrls();\n            return {\n                ...state, \n                isLoading: false, \n                errMess: null, \n                logos: parsed_urls.logos,  \n                featured_logos: parsed_urls.featured_logos,\n                items: action.payload\n            };\n\n        case ActionTypes.SPECIALTIES_LOADING:\n            return {\n                ...state, \n                isLoading: true, \n                errMess: null, \n                logos: [],\n                featured_logos: [],\n                items: []\n            };\n\n        case ActionTypes.SPECIALTIES_FAILED:\n            return {\n                ...state, \n                isLoading: false, \n                errMess: action.payload, \n                logos: [],\n                featured_logos: [],\n                items: []\n            };\n            \n        default: \n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}