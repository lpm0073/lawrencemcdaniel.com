{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { actionTypes } from 'react-redux-form';\nexport const Dishes = (state = {\n  isLoading: true,\n  errMess: null,\n  dishes: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_DISHES:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        dishes: action.payload\n      };\n\n    case actionTypes.DISHES_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        dishes: []\n      };\n\n    case actionTypes.DISHES_FAILED:\n      console.log('dishes failed.');\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        dishes: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/coursera-react/confusion/src/redux/dishes.js"],"names":["ActionTypes","actionTypes","Dishes","state","isLoading","errMess","dishes","action","type","ADD_DISHES","payload","DISHES_LOADING","DISHES_FAILED","console","log"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAG;AAC3BC,EAAAA,SAAS,EAAE,IADgB;AAE3BC,EAAAA,OAAO,EAAE,IAFkB;AAG3BC,EAAAA,MAAM,EAAE;AAHmB,CAAT,EAIfC,MAJe,KAIJ;AACd,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,WAAW,CAACS,UAAjB;AACI,aAAO,EACH,GAAGN,KADA;AAEHC,QAAAA,SAAS,EAAE,KAFR;AAGHC,QAAAA,OAAO,EAAE,IAHN;AAIHC,QAAAA,MAAM,EAAEC,MAAM,CAACG;AAJZ,OAAP;;AAOJ,SAAKT,WAAW,CAACU,cAAjB;AACI,aAAO,EACH,GAAGR,KADA;AAEHC,QAAAA,SAAS,EAAE,IAFR;AAGHC,QAAAA,OAAO,EAAE,IAHN;AAIHC,QAAAA,MAAM,EAAE;AAJL,OAAP;;AAOJ,SAAKL,WAAW,CAACW,aAAjB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,aAAO,EACH,GAAGX,KADA;AAEHC,QAAAA,SAAS,EAAE,KAFR;AAGHC,QAAAA,OAAO,EAAEE,MAAM,CAACG,OAHb;AAIHJ,QAAAA,MAAM,EAAE;AAJL,OAAP;;AAOJ;AACI,aAAOH,KAAP;AA3BR;AA6BH,CAlCM","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport { actionTypes } from 'react-redux-form';\n\n\nexport const Dishes = (state = {\n    isLoading: true,\n    errMess: null,\n    dishes: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {\n                ...state, \n                isLoading: false, \n                errMess: null, \n                dishes: action.payload\n            };\n\n        case actionTypes.DISHES_LOADING:\n            return {\n                ...state, \n                isLoading: true, \n                errMess: null, \n                dishes: []\n            };\n\n        case actionTypes.DISHES_FAILED:\n            console.log('dishes failed.')\n            return {\n                ...state, \n                isLoading: false, \n                errMess: action.payload, \n                dishes: []\n            };\n            \n        default: \n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}