{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _reactDom = require(\"react-dom\"); // React hooks\n\n\nvar useInViewport = function useInViewport(target, options, config, props) {\n  if (config === void 0) {\n    config = {\n      disconnectOnLeave: false\n    };\n  }\n\n  var {\n    onEnterViewport,\n    onLeaveViewport\n  } = props;\n  var [inViewport, setInViewport] = (0, _react.useState)(false);\n  var [enterCount, setEnterCount] = (0, _react.useState)(0);\n  var [leaveCount, setLeaveCount] = (0, _react.useState)(0);\n  var observer = (0, _react.useRef)();\n  var intersected = (0, _react.useRef)(false);\n\n  function startObserver() {\n    if (target.current && observer.current) {\n      observer.current.observe((0, _reactDom.findDOMNode)(target.current));\n    }\n  }\n\n  function stopObserver() {\n    if (target.current && observer.current) {\n      observer.current.unobserve((0, _reactDom.findDOMNode)(target.current));\n      observer.current.disconnect();\n      observer.current = null;\n    }\n  }\n\n  function handleIntersection(entries) {\n    var entry = entries[0] || {};\n    var {\n      isIntersecting,\n      intersectionRatio\n    } = entry;\n    var isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0; // enter\n\n    if (!intersected.current && isInViewport) {\n      intersected.current = true;\n      onEnterViewport && onEnterViewport();\n      setInViewport(isInViewport);\n      setEnterCount(enterCount + 1);\n      return;\n    } // leave\n\n\n    if (intersected.current && !isInViewport) {\n      intersected.current = false;\n      onLeaveViewport && onLeaveViewport();\n\n      if (config.disconnectOnLeave && observer.current) {\n        // disconnect obsever on leave\n        observer.current.disconnect();\n      }\n\n      setInViewport(isInViewport);\n      setLeaveCount(leaveCount + 1);\n    }\n  }\n\n  function initIntersectionObserver() {\n    if (!observer.current) {\n      // $FlowFixMe\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }\n\n  (0, _react.useEffect)(() => {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n    initIntersectionObserver();\n    startObserver();\n    return () => {\n      stopObserver();\n    };\n  }, [target, options, config, onEnterViewport, onLeaveViewport]);\n  (0, _react.useEffect)(() => {\n    // reset observer on update, to fix race condition that when observer init,\n    // the element is not in viewport, such as in animation\n    if (!intersected.current && !inViewport) {\n      if (observer.current && target.current) {\n        observer.current.unobserve((0, _reactDom.findDOMNode)(target.current));\n        observer.current.observe((0, _reactDom.findDOMNode)(target.current));\n      }\n    }\n  });\n  return {\n    inViewport,\n    enterCount,\n    leaveCount\n  };\n};\n\nvar _default = useInViewport;\nexports.default = _default;","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/node_modules/react-in-viewport/dist/es/lib/useInViewport.js"],"names":["exports","__esModule","default","_react","require","_reactDom","useInViewport","target","options","config","props","disconnectOnLeave","onEnterViewport","onLeaveViewport","inViewport","setInViewport","useState","enterCount","setEnterCount","leaveCount","setLeaveCount","observer","useRef","intersected","startObserver","current","observe","findDOMNode","stopObserver","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","IntersectionObserver","useEffect","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _reactDom = require(\"react-dom\");\n\n// React hooks\nvar useInViewport = function useInViewport(target, options, config, props) {\n  if (config === void 0) {\n    config = {\n      disconnectOnLeave: false\n    };\n  }\n\n  var {\n    onEnterViewport,\n    onLeaveViewport\n  } = props;\n  var [inViewport, setInViewport] = (0, _react.useState)(false);\n  var [enterCount, setEnterCount] = (0, _react.useState)(0);\n  var [leaveCount, setLeaveCount] = (0, _react.useState)(0);\n  var observer = (0, _react.useRef)();\n  var intersected = (0, _react.useRef)(false);\n\n  function startObserver() {\n    if (target.current && observer.current) {\n      observer.current.observe((0, _reactDom.findDOMNode)(target.current));\n    }\n  }\n\n  function stopObserver() {\n    if (target.current && observer.current) {\n      observer.current.unobserve((0, _reactDom.findDOMNode)(target.current));\n      observer.current.disconnect();\n      observer.current = null;\n    }\n  }\n\n  function handleIntersection(entries) {\n    var entry = entries[0] || {};\n    var {\n      isIntersecting,\n      intersectionRatio\n    } = entry;\n    var isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0; // enter\n\n    if (!intersected.current && isInViewport) {\n      intersected.current = true;\n      onEnterViewport && onEnterViewport();\n      setInViewport(isInViewport);\n      setEnterCount(enterCount + 1);\n      return;\n    } // leave\n\n\n    if (intersected.current && !isInViewport) {\n      intersected.current = false;\n      onLeaveViewport && onLeaveViewport();\n\n      if (config.disconnectOnLeave && observer.current) {\n        // disconnect obsever on leave\n        observer.current.disconnect();\n      }\n\n      setInViewport(isInViewport);\n      setLeaveCount(leaveCount + 1);\n    }\n  }\n\n  function initIntersectionObserver() {\n    if (!observer.current) {\n      // $FlowFixMe\n      observer.current = new IntersectionObserver(handleIntersection, options);\n    }\n  }\n\n  (0, _react.useEffect)(() => {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n    initIntersectionObserver();\n    startObserver();\n    return () => {\n      stopObserver();\n    };\n  }, [target, options, config, onEnterViewport, onLeaveViewport]);\n  (0, _react.useEffect)(() => {\n    // reset observer on update, to fix race condition that when observer init,\n    // the element is not in viewport, such as in animation\n    if (!intersected.current && !inViewport) {\n      if (observer.current && target.current) {\n        observer.current.unobserve((0, _reactDom.findDOMNode)(target.current));\n        observer.current.observe((0, _reactDom.findDOMNode)(target.current));\n      }\n    }\n  });\n  return {\n    inViewport,\n    enterCount,\n    leaveCount\n  };\n};\n\nvar _default = useInViewport;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}