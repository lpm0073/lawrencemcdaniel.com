{"ast":null,"code":"import{getPixelRatio}from'../../shared/getPixelRatio';var drawCircle=function drawCircle(ref){var canvas=ref.current;var context=canvas.getContext('2d');var ratio=getPixelRatio(context);var width=getComputedStyle(canvas).getPropertyValue('width').slice(0,-2);var height=getComputedStyle(canvas).getPropertyValue('height').slice(0,-2);canvas.width=width*ratio;canvas.height=height*ratio;canvas.style.width=\"\".concat(width,\"px\");canvas.style.height=\"\".concat(height,\"px\");context.lineWidth=10;context.strokeStyle='#666';context.shadowOffsetX=0;context.shadowOffsetY=0;context.shadowBlur=0;context.shadowColor='#656565';var x=canvas.width/2;var y=canvas.height/2;var radius=x-context.lineWidth;var endPercent=100;var circ=Math.PI*2;var quart=Math.PI/2;var i=0;var requestId;var render=function render(current){context.clearRect(0,0,canvas.width,canvas.height);context.beginPath();context.arc(x,y,radius,-quart,circ*current-quart,false);context.stroke();i+=2;if(i<=endPercent){requestId=requestAnimationFrame(function(){render(i/100);});}};setTimeout(function(){render();},Math.random()*300);return function(){cancelAnimationFrame(requestId);};};export default drawCircle;","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/pages/skills/drawCircle.js"],"names":["getPixelRatio","drawCircle","ref","canvas","current","context","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","lineWidth","strokeStyle","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","x","y","radius","endPercent","circ","Math","PI","quart","i","requestId","render","clearRect","beginPath","arc","stroke","requestAnimationFrame","setTimeout","random","cancelAnimationFrame"],"mappings":"AAAA,OAAQA,aAAR,KAA4B,4BAA5B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAS,CACxB,GAAIC,CAAAA,MAAM,CAAGD,GAAG,CAACE,OAAjB,CACA,GAAIC,CAAAA,OAAO,CAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAd,CAEA,GAAIC,CAAAA,KAAK,CAAGP,aAAa,CAACK,OAAD,CAAzB,CACA,GAAIG,CAAAA,KAAK,CAAGC,gBAAgB,CAACN,MAAD,CAAhB,CAAyBO,gBAAzB,CAA0C,OAA1C,EAAmDC,KAAnD,CAAyD,CAAzD,CAA4D,CAAC,CAA7D,CAAZ,CACA,GAAIC,CAAAA,MAAM,CAAGH,gBAAgB,CAACN,MAAD,CAAhB,CAAyBO,gBAAzB,CAA0C,QAA1C,EAAoDC,KAApD,CAA0D,CAA1D,CAA6D,CAAC,CAA9D,CAAb,CAEAR,MAAM,CAACK,KAAP,CAAeA,KAAK,CAAGD,KAAvB,CACAJ,MAAM,CAACS,MAAP,CAAgBA,MAAM,CAAGL,KAAzB,CACAJ,MAAM,CAACU,KAAP,CAAaL,KAAb,WAAwBA,KAAxB,OACAL,MAAM,CAACU,KAAP,CAAaD,MAAb,WAAyBA,MAAzB,OAEAP,OAAO,CAACS,SAAR,CAAoB,EAApB,CACAT,OAAO,CAACU,WAAR,CAAsB,MAAtB,CACAV,OAAO,CAACW,aAAR,CAAwB,CAAxB,CACAX,OAAO,CAACY,aAAR,CAAwB,CAAxB,CACAZ,OAAO,CAACa,UAAR,CAAqB,CAArB,CACAb,OAAO,CAACc,WAAR,CAAsB,SAAtB,CAGA,GAAIC,CAAAA,CAAC,CAAGjB,MAAM,CAACK,KAAP,CAAe,CAAvB,CACA,GAAIa,CAAAA,CAAC,CAAGlB,MAAM,CAACS,MAAP,CAAgB,CAAxB,CACA,GAAIU,CAAAA,MAAM,CAAGF,CAAC,CAAGf,OAAO,CAACS,SAAzB,CACA,GAAIS,CAAAA,UAAU,CAAG,GAAjB,CACA,GAAIC,CAAAA,IAAI,CAAGC,IAAI,CAACC,EAAL,CAAU,CAArB,CACA,GAAIC,CAAAA,KAAK,CAAGF,IAAI,CAACC,EAAL,CAAU,CAAtB,CACA,GAAIE,CAAAA,CAAC,CAAG,CAAR,CACA,GAAIC,CAAAA,SAAJ,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAC1B,OAAD,CAAa,CAExBC,OAAO,CAAC0B,SAAR,CAAkB,CAAlB,CAAqB,CAArB,CAAwB5B,MAAM,CAACK,KAA/B,CAAsCL,MAAM,CAACS,MAA7C,EACAP,OAAO,CAAC2B,SAAR,GACA3B,OAAO,CAAC4B,GAAR,CAAYb,CAAZ,CAAeC,CAAf,CAAkBC,MAAlB,CAA0B,CAAEK,KAA5B,CAAqCH,IAAI,CAAGpB,OAAR,CAAmBuB,KAAvD,CAA8D,KAA9D,EACAtB,OAAO,CAAC6B,MAAR,GACAN,CAAC,EAAG,CAAJ,CAEA,GAAIA,CAAC,EAAIL,UAAT,CAAqB,CACjBM,SAAS,CAAGM,qBAAqB,CAAC,UAAY,CAC1CL,MAAM,CAACF,CAAC,CAAG,GAAL,CAAN,CACH,CAFgC,CAAjC,CAGH,CAEJ,CAdD,CAgBAQ,UAAU,CAAC,UAAW,CAClBN,MAAM,GACT,CAFS,CAEPL,IAAI,CAACY,MAAL,GAAgB,GAFT,CAAV,CAKA,MAAO,WAAM,CACTC,oBAAoB,CAACT,SAAD,CAApB,CACH,CAFD,CAIH,CAvDD,CAyDA,cAAe5B,CAAAA,UAAf","sourcesContent":["import {getPixelRatio} from '../../shared/getPixelRatio';\n\nconst drawCircle = (ref) => {\n    let canvas = ref.current;\n    let context = canvas.getContext('2d');\n    \n    let ratio = getPixelRatio(context);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n            \n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    context.lineWidth = 10;\n    context.strokeStyle = '#666';\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 0;\n    context.shadowColor = '#656565';\n    \n\n    var x = canvas.width / 2;\n    var y = canvas.height / 2;\n    var radius = x - context.lineWidth;\n    var endPercent = 100;\n    var circ = Math.PI * 2;\n    var quart = Math.PI / 2;\n    var i = 0;\n    let requestId;\n\n    const render = (current) => {\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.beginPath();\n        context.arc(x, y, radius, -(quart), (circ * current) - quart, false);\n        context.stroke();\n        i +=2;\n    \n        if (i <= endPercent) {\n            requestId = requestAnimationFrame(function () {\n                render(i / 100)\n            });\n        }\n    \n    };\n\n    setTimeout(function() { \n        render(); \n    }, Math.random() * 300);\n    \n\n    return () => {\n        cancelAnimationFrame(requestId);\n    };\n\n};\n\nexport default drawCircle;"]},"metadata":{},"sourceType":"module"}