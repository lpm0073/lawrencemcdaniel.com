{"ast":null,"code":"var _jsxFileName = \"/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/pages/skills/skillColumn.js\";\nimport React from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n/*\n Canvas animated drawing in React: http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n */\n\nconst getPixelRatio = context => {\n  var backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nconst drawCircle = () => {\n  let canvas = ref.current;\n  let context = canvas.getContext('2d');\n  let ratio = getPixelRatio(context);\n  let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n  let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n  canvas.width = width * ratio;\n  canvas.height = height * ratio;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n  context.lineWidth = 10;\n  context.strokeStyle = '#555';\n  context.shadowOffsetX = 0;\n  context.shadowOffsetY = 0;\n  context.shadowBlur = 0;\n  context.shadowColor = '#656565';\n  var x = canvas.width / 2;\n  var y = canvas.height / 2;\n  var radius = x - context.lineWidth;\n  var endPercent = 100;\n  var circ = Math.PI * 2;\n  var quart = Math.PI / 2;\n  let requestId,\n      i = 0;\n\n  const render = current => {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    context.beginPath();\n    context.arc(x, y, radius, -quart, circ * current - quart, false);\n    /*\n    context.arc(x, y, x * Math.abs(Math.cos(i)), 0, 2 * Math.PI);\n    context.fill();\n    */\n\n    context.stroke();\n    i += 2;\n\n    if (i <= endPercent) {\n      requestId = requestAnimationFrame(function () {\n        render(i / 100);\n      });\n    }\n  };\n\n  setTimeout(function () {\n    render();\n  }, Math.random() * 300);\n  return () => {\n    cancelAnimationFrame(requestId);\n  };\n};\n\nconst SkillColumn = props => {\n  const thisClassName = \"fa p-3 \" + props.icon + \" fa-2x\";\n  const ref = useRef();\n  useEffect(() => drawCircle());\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-2 col-md-4 col-sm-6 px-1 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skill-column text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: ref,\n    className: \"skill-pct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"skill-title mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"skill-description px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, props.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skill-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: thisClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default SkillColumn;","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/pages/skills/skillColumn.js"],"names":["React","useRef","useEffect","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","drawCircle","canvas","ref","current","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","lineWidth","strokeStyle","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","x","y","radius","endPercent","circ","Math","PI","quart","requestId","i","render","clearRect","beginPath","arc","stroke","requestAnimationFrame","setTimeout","random","cancelAnimationFrame","SkillColumn","props","thisClassName","icon","title","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n\n/*\n Canvas animated drawing in React: http://www.petecorey.com/blog/2019/08/19/animating-a-canvas-with-react-hooks/\n */\n\nconst getPixelRatio = context => {\n    var backingStore = context.backingStorePixelRatio ||\n                        context.webkitBackingStorePixelRatio ||\n                        context.mozBackingStorePixelRatio ||\n                        context.msBackingStorePixelRatio ||\n                        context.oBackingStorePixelRatio ||\n                        context.backingStorePixelRatio || \n                        1;\n    \n    return (window.devicePixelRatio || 1) / backingStore;\n    };\n\nconst drawCircle = () => {\n    let canvas = ref.current;\n    let context = canvas.getContext('2d');\n    \n    let ratio = getPixelRatio(context);\n    let width = getComputedStyle(canvas)\n        .getPropertyValue('width')\n        .slice(0, -2);\n    let height = getComputedStyle(canvas)\n        .getPropertyValue('height')\n        .slice(0, -2);\n            \n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    context.lineWidth = 10;\n    context.strokeStyle = '#555';\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 0;\n    context.shadowColor = '#656565';\n \n\n    var x = canvas.width / 2;\n    var y = canvas.height / 2;\n\n    var radius = x - context.lineWidth;\n    var endPercent = 100;\n    var circ = Math.PI * 2;\n    var quart = Math.PI / 2;\n\n    let requestId, i = 0;\n\n    const render = (current) => {\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.beginPath();\n        context.arc(x, y, radius, -(quart), (circ * current) - quart, false);\n        /*\n        context.arc(x, y, x * Math.abs(Math.cos(i)), 0, 2 * Math.PI);\n        context.fill();\n        */\n        context.stroke();\n        i +=2;\n \n        if (i <= endPercent) {\n            requestId = requestAnimationFrame(function () {\n                render(i / 100)\n            });\n        }\n \n    };\n\n    setTimeout(function(){ render(); }, Math.random() * 300);\n    \n\n    return () => {\n        cancelAnimationFrame(requestId);\n    };\n\n};\n\nconst SkillColumn = (props) => {\n    \n    const thisClassName = \"fa p-3 \" + props.icon + \" fa-2x\";\n    const ref = useRef();\n\n    useEffect(() => drawCircle());\n\n    return(\n        <React.Fragment>\n            <div className=\"col-lg-2 col-md-4 col-sm-6 px-1 mb-5\">\n                <div className=\"skill-column text-center\">\n                    <canvas \n                        ref={ref}\n                        className=\"skill-pct\" />\n                    <h4 className=\"skill-title mt-4\">{props.title}</h4>\n                    <p className=\"skill-description px-2\">{props.description}</p>\n                    <div className=\"skill-icon\">\n                        <i className={thisClassName}></i>\n                    </div>\n                </div>\n            </div>\n\n        </React.Fragment>\n\n    );\n}\n\nexport default SkillColumn;\n\n"]},"metadata":{},"sourceType":"module"}