{"ast":null,"code":"var _jsxFileName = \"/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/components/logocube/Component.js\";\n\n/*\n    https://www.smashingmagazine.com/2018/02/react-d3-ecosystem/\n */\nimport React, { Component } from 'react';\nimport { wpGetFeaturedImage } from '../../shared/wpGetFeaturedImage';\nimport './styles.css';\nimport Loading from '../Loading';\n\nconst LogoDiv = props => {\n  const clsId = \"d3-side \" + props.side;\n  const divId = \"cube-\" + props.side;\n  const divStyle = {\n    \"background-image\": props.url\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: divId,\n    className: \"logo\",\n    style: divStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }))));\n};\n\nclass LogoCube extends Component {\n  constructor(props) {\n    super(props);\n    /*\n        Note: one ugly side effect of the randomness in choosing which side to update, and\n        the time at which to update is that, sometimes, the same panel gets chosen very quickly\n        which leads to jerky-looking behavior.\n         To prevent this we keep track of how long each logo has been on a given cube side.\n        the repaint() method will only repaint a side if that side has in-state for at least \n        X milliseconds.\n     */\n\n    var d = new Date();\n    d.setSeconds(d.getSeconds() - 2);\n    const logos = this.props.logos.items.map((post, indx) => {\n      return wpGetFeaturedImage(post, null);\n    });\n    this.state = {\n      logos: logos,\n      timeout: null,\n      cubeTop: d,\n      cubeBottom: d,\n      cubeLeft: d,\n      cubeRight: d,\n      cubeFront: d,\n      cubeBack: d,\n      cubeTopBackgroundUrl: null,\n      cubeBottomBackgroundUrl: null,\n      cubeLeftBackgroundUrl: null,\n      cubeRightBackgroundUrl: null,\n      cubeFrontBackgroundUrl: null,\n      cubeBackBackgroundUrl: null\n    };\n    this.resetElapsedTime = this.resetElapsedTime.bind(this);\n    this.getElapsedTime = this.getElapsedTime.bind(this);\n    this.getBackgroundUrl = this.getBackgroundUrl.bind(this);\n    this.setBackgroundUrl = this.setBackgroundUrl.bind(this);\n    this.getRandomSide = this.getRandomSide.bind(this);\n    this.logos = this.logos.bind(this);\n    this.shuffleArray = this.shuffleArray.bind(this);\n    this.repaint = this.repaint.bind(this);\n  }\n\n  componentDidMount() {\n    /*\n        Note: componentDidMount() gets called a half dozen times bc the Home component\n        which instantiates this component itself mounts and unmounts multiple times.\n         we therefore have to keep track of any repaint() threads that we invoke so that \n        we can kill them if necessary.\n     */\n    var self = this;\n\n    if (!this.props.logos.isLoading) {\n      var myTimeout = setTimeout(function () {\n        self.repaint();\n      }, 1000);\n    }\n\n    this.setState({\n      timeout: myTimeout\n    });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.state.timeout);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"logoprop\",\n      className: \"d3-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, this.props.logos.isLoading ? /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d3-cube\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LogoDiv, {\n      side: \"top\",\n      url: this.getBackgroundUrl(\"top\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(LogoDiv, {\n      side: \"bottom\",\n      url: this.getBackgroundUrl(\"bottom\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(LogoDiv, {\n      side: \"front\",\n      url: this.getBackgroundUrl(\"front\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(LogoDiv, {\n      side: \"back\",\n      url: this.getBackgroundUrl(\"back\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(LogoDiv, {\n      side: \"right\",\n      url: this.getBackgroundUrl(\"right\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(LogoDiv, {\n      side: \"left\",\n      url: this.getBackgroundUrl(\"left\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  repaint() {\n    var self = this;\n\n    if (self.props.logos.isLoading) {\n      return false;\n    }\n\n    function random_logo(logos) {\n      return logos[Math.floor(Math.random() * logos.length)];\n    }\n\n    setTimeout(function () {\n      self.setBackgroundUrl(self.getRandomSide(), random_logo(self.state.logos));\n      self.repaint();\n    }, 1000 * Math.random());\n  }\n\n  getRandomSide() {\n    const side = Math.floor(Math.random() * 6);\n\n    switch (side) {\n      case 1:\n        return \"top\";\n\n      case 2:\n        return \"bottom\";\n\n      case 3:\n        return \"left\";\n\n      case 4:\n        return \"right\";\n\n      case 5:\n        return \"front\";\n\n      case 6:\n        return \"back\";\n    }\n  }\n\n  getBackgroundUrl(side) {\n    switch (side) {\n      case \"cube-top\":\n        return this.state.cubeTopBackgroundUrl;\n\n      case \"cube-bottom\":\n        return this.state.cubeBottomBackgroundUrl;\n\n      case \"cube-left\":\n        return this.state.cubeLeftBackgroundUrl;\n\n      case \"cube-right\":\n        return this.state.cubeRightBackgroundUrl;\n\n      case \"cube-front\":\n        return this.state.cubeFrontBackgroundUrl;\n\n      case \"cube-back\":\n        return this.state.cubeBackBackgroundUrl;\n    }\n  }\n\n  setBackgroundUrl(side, url) {\n    console.log(\"setBackgroundUrl()\", side, url);\n\n    switch (side) {\n      case \"cube-top\":\n        this.setState({\n          cubeTopBackgroundUrl: url\n        });\n        break;\n\n      case \"cube-bottom\":\n        this.setState({\n          cubeBottomBackgroundUrl: url\n        });\n        break;\n\n      case \"cube-left\":\n        this.setState({\n          cubeLeftBackgroundUrl: url\n        });\n        break;\n\n      case \"cube-right\":\n        this.setState({\n          cubeRightBackgroundUrl: url\n        });\n        break;\n\n      case \"cube-front\":\n        this.setState({\n          cubeFrontBackgroundUrl: url\n        });\n        break;\n\n      case \"cube-back\":\n        this.setState({\n          cubeBackBackgroundUrl: url\n        });\n        break;\n    }\n  }\n\n  resetElapsedTime(side) {\n    const d = new Date();\n\n    switch (side) {\n      case \"cube-top\":\n        this.setState({\n          cubeTop: d\n        });\n        break;\n\n      case \"cube-bottom\":\n        this.setState({\n          cubeBottom: d\n        });\n        break;\n\n      case \"cube-left\":\n        this.setState({\n          cubeLeft: d\n        });\n        break;\n\n      case \"cube-right\":\n        this.setState({\n          cubeRight: d\n        });\n        break;\n\n      case \"cube-front\":\n        this.setState({\n          cubeFront: d\n        });\n        break;\n\n      case \"cube-back\":\n        this.setState({\n          cubeBack: d\n        });\n        break;\n    }\n  }\n\n  getElapsedTime(side) {\n    const d = new Date();\n\n    switch (side) {\n      case \"cube-top\":\n        return d - this.state.cubeTop;\n\n      case \"cube-bottom\":\n        return d - this.state.cubeBottom;\n\n      case \"cube-left\":\n        return d - this.state.cubeLeft;\n\n      case \"cube-right\":\n        return d - this.state.cubeRight;\n\n      case \"cube-front\":\n        return d - this.state.cubeFront;\n\n      case \"cube-back\":\n        return d - this.state.cubeBack;\n    }\n  }\n\n  logos() {\n    var self = this;\n    return self.props.logos.items;\n  }\n\n  shuffleArray(array) {\n    let i = array.length - 1;\n\n    for (; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    return array;\n  }\n\n}\n\nexport default LogoCube;","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/components/logocube/Component.js"],"names":["React","Component","wpGetFeaturedImage","Loading","LogoDiv","props","clsId","side","divId","divStyle","url","LogoCube","constructor","d","Date","setSeconds","getSeconds","logos","items","map","post","indx","state","timeout","cubeTop","cubeBottom","cubeLeft","cubeRight","cubeFront","cubeBack","cubeTopBackgroundUrl","cubeBottomBackgroundUrl","cubeLeftBackgroundUrl","cubeRightBackgroundUrl","cubeFrontBackgroundUrl","cubeBackBackgroundUrl","resetElapsedTime","bind","getElapsedTime","getBackgroundUrl","setBackgroundUrl","getRandomSide","shuffleArray","repaint","componentDidMount","self","isLoading","myTimeout","setTimeout","setState","componentWillUnmount","clearTimeout","render","random_logo","Math","floor","random","length","console","log","array","i","j","temp"],"mappings":"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","sourcesContent":["/*\n    https://www.smashingmagazine.com/2018/02/react-d3-ecosystem/\n */\nimport React, { Component } from 'react';\nimport { wpGetFeaturedImage } from '../../shared/wpGetFeaturedImage';\nimport './styles.css';\nimport Loading from '../Loading';\n\nconst LogoDiv = (props) => {\n\n    const clsId = \"d3-side \" + props.side;\n    const divId = \"cube-\" + props.side;\n    const divStyle = {\n        \"background-image\": props.url\n      }\n\n    return(\n        <React.Fragment>\n            <div className={clsId}><div>\n                <div id={divId} className=\"logo\" style={divStyle}></div>\n            </div></div>\n        </React.Fragment>\n\n    );\n}\nclass LogoCube extends Component {\n\n    constructor(props) {\n        super(props);\n\n        /*\n            Note: one ugly side effect of the randomness in choosing which side to update, and\n            the time at which to update is that, sometimes, the same panel gets chosen very quickly\n            which leads to jerky-looking behavior.\n\n            To prevent this we keep track of how long each logo has been on a given cube side.\n            the repaint() method will only repaint a side if that side has in-state for at least \n            X milliseconds.\n         */\n        var d = new Date();\n        d.setSeconds(d.getSeconds() - 2);\n\n        const logos =  this.props.logos.items.map((post, indx) => {\n            return wpGetFeaturedImage(post, null);\n        });\n\n        this.state = {\n            logos: logos,\n            timeout: null,\n            cubeTop: d,\n            cubeBottom: d,\n            cubeLeft: d,\n            cubeRight: d,\n            cubeFront: d,\n            cubeBack: d,\n\n            cubeTopBackgroundUrl: null,\n            cubeBottomBackgroundUrl: null,\n            cubeLeftBackgroundUrl: null,\n            cubeRightBackgroundUrl: null,\n            cubeFrontBackgroundUrl: null,\n            cubeBackBackgroundUrl: null\n          };\n\n        this.resetElapsedTime = this.resetElapsedTime.bind(this);\n        this.getElapsedTime = this.getElapsedTime.bind(this);\n        this.getBackgroundUrl = this.getBackgroundUrl.bind(this);\n        this.setBackgroundUrl = this.setBackgroundUrl.bind(this);\n        this.getRandomSide = this.getRandomSide.bind(this);\n    \n        this.logos = this.logos.bind(this);\n        this.shuffleArray = this.shuffleArray.bind(this);\n        this.repaint = this.repaint.bind(this);\n        }\n\n\n\n    componentDidMount() {\n        /*\n            Note: componentDidMount() gets called a half dozen times bc the Home component\n            which instantiates this component itself mounts and unmounts multiple times.\n\n            we therefore have to keep track of any repaint() threads that we invoke so that \n            we can kill them if necessary.\n         */\n        var self = this;\n        if (!this.props.logos.isLoading) {\n            var myTimeout = setTimeout(function() {\n                self.repaint();\n            }, 1000);    \n        }\n        this.setState({timeout: myTimeout});\n\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.state.timeout);        \n    }\n    \n    render() {\n\n        return(\n            <div id=\"logoprop\" className=\"d3-container\">\n            {this.props.logos.isLoading ? (\n                <Loading />\n              ) : (\n                <div className=\"d3-cube\">\n                    <LogoDiv side={\"top\"} url={this.getBackgroundUrl(\"top\")} />\n                    <LogoDiv side={\"bottom\"} url={this.getBackgroundUrl(\"bottom\")} />\n                    <LogoDiv side={\"front\"} url={this.getBackgroundUrl(\"front\")} />\n                    <LogoDiv side={\"back\"} url={this.getBackgroundUrl(\"back\")} />\n                    <LogoDiv side={\"right\"} url={this.getBackgroundUrl(\"right\")} />\n                    <LogoDiv side={\"left\"} url={this.getBackgroundUrl(\"left\")} />\n                </div>\n              )}\n            </div>\n        );\n    }\n\n    repaint() {\n        var self = this;\n        if (self.props.logos.isLoading) {\n            return false;\n        }\n\n        function random_logo(logos) {\n            return logos[Math.floor(Math.random() * logos.length)];\n        }\n    \n        \n        setTimeout(function() {\n            self.setBackgroundUrl(self.getRandomSide(), random_logo(self.state.logos));\n            self.repaint();\n        }, 1000 * Math.random());   \n\n      \n    }\n\n    getRandomSide() {\n\n        const side = Math.floor(Math.random() * 6);\n        switch(side) {\n            case 1: return \"top\";\n            case 2: return \"bottom\";\n            case 3: return \"left\";\n            case 4: return \"right\";\n            case 5: return \"front\";\n            case 6: return \"back\";\n        }\n    \n    }\n    \n    getBackgroundUrl(side) {\n        switch(side) {\n            case \"cube-top\": return this.state.cubeTopBackgroundUrl;\n            case \"cube-bottom\": return this.state.cubeBottomBackgroundUrl;\n            case \"cube-left\": return this.state.cubeLeftBackgroundUrl;\n            case \"cube-right\": return this.state.cubeRightBackgroundUrl;\n            case \"cube-front\": return this.state.cubeFrontBackgroundUrl;\n            case \"cube-back\": return this.state.cubeBackBackgroundUrl;\n        }\n\n    }\n\n    setBackgroundUrl(side, url) {\n        console.log(\"setBackgroundUrl()\", side, url);\n\n        switch(side) {\n            case \"cube-top\":\n                this.setState({cubeTopBackgroundUrl: url});\n                break;\n            case \"cube-bottom\":\n                this.setState({cubeBottomBackgroundUrl: url});\n                break;\n            case \"cube-left\":\n                this.setState({cubeLeftBackgroundUrl: url});\n                break;\n            case \"cube-right\":\n                this.setState({cubeRightBackgroundUrl: url});\n                break;\n            case \"cube-front\":\n                this.setState({cubeFrontBackgroundUrl: url});\n                break;\n            case \"cube-back\":\n                this.setState({cubeBackBackgroundUrl: url});\n                break;\n        }        \n\n    }\n    resetElapsedTime(side) {\n        const d = new Date();\n        switch(side) {\n            case \"cube-top\":\n                this.setState({cubeTop: d});\n                break;\n            case \"cube-bottom\":\n                this.setState({cubeBottom: d});\n                break;\n            case \"cube-left\":\n                this.setState({cubeLeft: d});\n                break;\n            case \"cube-right\":\n                this.setState({cubeRight: d});\n                break;\n            case \"cube-front\":\n                this.setState({cubeFront: d});\n                break;\n            case \"cube-back\":\n                this.setState({cubeBack: d});\n                break;\n        }        \n    }\n\n    getElapsedTime(side) {\n        const d = new Date();\n        switch(side) {\n            case \"cube-top\": return d - this.state.cubeTop;\n            case \"cube-bottom\": return d - this.state.cubeBottom;\n            case \"cube-left\": return d - this.state.cubeLeft;\n            case \"cube-right\": return d - this.state.cubeRight;\n            case \"cube-front\": return d - this.state.cubeFront;\n            case \"cube-back\": return d - this.state.cubeBack;\n        }\n    }\n\n    logos() {\n        var self = this;\n        return self.props.logos.items;\n    }\n\n    shuffleArray(array) {\n        let i = array.length - 1;\n        for (; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            const temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    }\n\n\n      \n}\n\nexport default LogoCube;\n"]},"metadata":{},"sourceType":"module"}