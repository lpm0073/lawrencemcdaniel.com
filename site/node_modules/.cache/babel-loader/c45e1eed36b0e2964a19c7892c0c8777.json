{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compareChildren = compareChildren;\nexports.default = deepCompareChildren;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _shallowCompare = require('shallow-compare');\n\nvar _shallowCompare2 = _interopRequireDefault(_shallowCompare);\n\nvar _shallowEqual = require('./shallow-equal');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction compareChildren(props, nextProps) {\n  var children = props.children;\n  var nextChildren = nextProps.children; // If the number of children changed, then children are different.\n  // If there are no children, use shallowCompare in parent function\n  // to determine if component should update (false && true == false)\n\n  if (_react2.default.Children.count(children) !== _react2.default.Children.count(nextChildren) || !_react2.default.Children.count(children) || !_react2.default.Children.count(nextChildren)) {\n    return true;\n  }\n\n  var childrenArray = _react2.default.Children.toArray(children);\n\n  var nextChildrenArray = _react2.default.Children.toArray(nextChildren); // React.Children.toArray strip's `false` children so lengths\n  // can change\n\n\n  if (childrenArray.length !== nextChildrenArray.length) {\n    return false;\n  }\n\n  return [].concat(childrenArray).some(function (child, i) {\n    var nextChild = nextChildrenArray[i];\n\n    if (!child.props || !nextChild.props) {\n      return !(0, _shallowEqual2.default)(child, nextChild);\n    }\n    /* eslint-disable no-use-before-define */\n\n\n    return deepCompareChildren(child, nextChild.props, nextChild.state);\n  });\n}\n\nfunction deepCompareChildren(instance, nextProps, nextState) {\n  if (!instance.props.children) return (0, _shallowCompare2.default)(instance, nextProps, nextState);\n  return (0, _shallowCompare2.default)(instance, nextProps, nextState) || compareChildren(instance.props, nextProps);\n}","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/coursera-react/confusion/node_modules/react-redux-form/lib/utils/deep-compare-children.js"],"names":["Object","defineProperty","exports","value","compareChildren","default","deepCompareChildren","_react","require","_react2","_interopRequireDefault","_shallowCompare","_shallowCompare2","_shallowEqual","_shallowEqual2","obj","__esModule","props","nextProps","children","nextChildren","Children","count","childrenArray","toArray","nextChildrenArray","length","concat","some","child","i","nextChild","state","instance","nextState"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compareChildren = compareChildren;\nexports.default = deepCompareChildren;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _shallowCompare = require('shallow-compare');\n\nvar _shallowCompare2 = _interopRequireDefault(_shallowCompare);\n\nvar _shallowEqual = require('./shallow-equal');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction compareChildren(props, nextProps) {\n  var children = props.children;\n  var nextChildren = nextProps.children;\n\n  // If the number of children changed, then children are different.\n  // If there are no children, use shallowCompare in parent function\n  // to determine if component should update (false && true == false)\n\n  if (_react2.default.Children.count(children) !== _react2.default.Children.count(nextChildren) || !_react2.default.Children.count(children) || !_react2.default.Children.count(nextChildren)) {\n    return true;\n  }\n\n  var childrenArray = _react2.default.Children.toArray(children);\n  var nextChildrenArray = _react2.default.Children.toArray(nextChildren);\n\n  // React.Children.toArray strip's `false` children so lengths\n  // can change\n  if (childrenArray.length !== nextChildrenArray.length) {\n    return false;\n  }\n\n  return [].concat(childrenArray).some(function (child, i) {\n    var nextChild = nextChildrenArray[i];\n\n    if (!child.props || !nextChild.props) {\n      return !(0, _shallowEqual2.default)(child, nextChild);\n    }\n\n    /* eslint-disable no-use-before-define */\n    return deepCompareChildren(child, nextChild.props, nextChild.state);\n  });\n}\n\nfunction deepCompareChildren(instance, nextProps, nextState) {\n  if (!instance.props.children) return (0, _shallowCompare2.default)(instance, nextProps, nextState);\n\n  return (0, _shallowCompare2.default)(instance, nextProps, nextState) || compareChildren(instance.props, nextProps);\n}"]},"metadata":{},"sourceType":"script"}