{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport verifyPlainObject from '../utils/verifyPlainObject';\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n    var hasRunOnce = false;\n    var mergedProps = void 0;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\nexport function whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\nexport function whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\nexport default [whenMergePropsIsFunction, whenMergePropsIsOmitted];","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/coursera-react/confusion/node_modules/react-redux/es/connect/mergeProps.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","verifyPlainObject","defaultMergeProps","stateProps","dispatchProps","ownProps","wrapMergePropsFunc","mergeProps","initMergePropsProxy","dispatch","_ref","displayName","pure","areMergedPropsEqual","hasRunOnce","mergedProps","mergePropsProxy","nextMergedProps","process","env","NODE_ENV","whenMergePropsIsFunction","undefined","whenMergePropsIsOmitted"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEA,OAAOS,iBAAP,MAA8B,4BAA9B;AAEA,OAAO,SAASC,iBAAT,CAA2BC,UAA3B,EAAuCC,aAAvC,EAAsDC,QAAtD,EAAgE;AACrE,SAAOhB,QAAQ,CAAC,EAAD,EAAKgB,QAAL,EAAeF,UAAf,EAA2BC,aAA3B,CAAf;AACD;AAED,OAAO,SAASE,kBAAT,CAA4BC,UAA5B,EAAwC;AAC7C,SAAO,SAASC,mBAAT,CAA6BC,QAA7B,EAAuCC,IAAvC,EAA6C;AAClD,QAAIC,WAAW,GAAGD,IAAI,CAACC,WAAvB;AAAA,QACIC,IAAI,GAAGF,IAAI,CAACE,IADhB;AAAA,QAEIC,mBAAmB,GAAGH,IAAI,CAACG,mBAF/B;AAIA,QAAIC,UAAU,GAAG,KAAjB;AACA,QAAIC,WAAW,GAAG,KAAK,CAAvB;AAEA,WAAO,SAASC,eAAT,CAAyBb,UAAzB,EAAqCC,aAArC,EAAoDC,QAApD,EAA8D;AACnE,UAAIY,eAAe,GAAGV,UAAU,CAACJ,UAAD,EAAaC,aAAb,EAA4BC,QAA5B,CAAhC;;AAEA,UAAIS,UAAJ,EAAgB;AACd,YAAI,CAACF,IAAD,IAAS,CAACC,mBAAmB,CAACI,eAAD,EAAkBF,WAAlB,CAAjC,EAAiEA,WAAW,GAAGE,eAAd;AAClE,OAFD,MAEO;AACLH,QAAAA,UAAU,GAAG,IAAb;AACAC,QAAAA,WAAW,GAAGE,eAAd;AAEA,YAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2CnB,iBAAiB,CAACc,WAAD,EAAcJ,WAAd,EAA2B,YAA3B,CAAjB;AAC5C;;AAED,aAAOI,WAAP;AACD,KAbD;AAcD,GAtBD;AAuBD;AAED,OAAO,SAASM,wBAAT,CAAkCd,UAAlC,EAA8C;AACnD,SAAO,OAAOA,UAAP,KAAsB,UAAtB,GAAmCD,kBAAkB,CAACC,UAAD,CAArD,GAAoEe,SAA3E;AACD;AAED,OAAO,SAASC,uBAAT,CAAiChB,UAAjC,EAA6C;AAClD,SAAO,CAACA,UAAD,GAAc,YAAY;AAC/B,WAAOL,iBAAP;AACD,GAFM,GAEHoB,SAFJ;AAGD;AAED,eAAe,CAACD,wBAAD,EAA2BE,uBAA3B,CAAf","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport verifyPlainObject from '../utils/verifyPlainObject';\n\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\n\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n\n    var hasRunOnce = false;\n    var mergedProps = void 0;\n\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n\n        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\n\nexport function whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\n\nexport function whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\n\nexport default [whenMergePropsIsFunction, whenMergePropsIsOmitted];"]},"metadata":{},"sourceType":"module"}