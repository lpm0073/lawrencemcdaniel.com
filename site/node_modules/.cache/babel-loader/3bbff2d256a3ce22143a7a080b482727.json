{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Comments = (state = {\n  errMess: null,\n  comments: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_COMMENTS:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        comments: action.payload\n      };\n\n    case ActionTypes.COMMENTS_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        comments: []\n      };\n\n    case ActionTypes.ADD_COMMENT:\n      var comment = action.payload;\n      comment.id = state.comments.length;\n      comment.date = new Date().toISOString();\n      return { ...state,\n        comments: state.comments.concat(comment)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/coursera-react/confusion/src/redux/comments.js"],"names":["ActionTypes","Comments","state","errMess","comments","action","type","ADD_COMMENTS","isLoading","payload","COMMENTS_FAILED","ADD_COMMENT","comment","id","length","date","Date","toISOString","concat"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAG;AAC7BC,EAAAA,OAAO,EAAE,IADoB;AAE7BC,EAAAA,QAAQ,EAAE;AAFmB,CAAT,EAGrBC,MAHqB,KAGV;AACV,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,WAAW,CAACO,YAAjB;AACI,aAAO,EAAC,GAAGL,KAAJ;AAAWM,QAAAA,SAAS,EAAE,KAAtB;AAA6BL,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,QAAQ,EAAEC,MAAM,CAACI;AAA7D,OAAP;;AAEJ,SAAKT,WAAW,CAACU,eAAjB;AACI,aAAO,EAAC,GAAGR,KAAJ;AAAWM,QAAAA,SAAS,EAAE,KAAtB;AAA6BL,QAAAA,OAAO,EAAEE,MAAM,CAACI,OAA7C;AAAsDL,QAAAA,QAAQ,EAAE;AAAhE,OAAP;;AAEJ,SAAKJ,WAAW,CAACW,WAAjB;AACI,UAAIC,OAAO,GAAGP,MAAM,CAACI,OAArB;AACAG,MAAAA,OAAO,CAACC,EAAR,GAAaX,KAAK,CAACE,QAAN,CAAeU,MAA5B;AACAF,MAAAA,OAAO,CAACG,IAAR,GAAe,IAAIC,IAAJ,GAAWC,WAAX,EAAf;AACA,aAAO,EAAC,GAAGf,KAAJ;AAAWE,QAAAA,QAAQ,EAAEF,KAAK,CAACE,QAAN,CAAec,MAAf,CAAsBN,OAAtB;AAArB,OAAP;;AAEJ;AACI,aAAOV,KAAP;AAdR;AAgBH,CApBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: []\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\n    \n        case ActionTypes.ADD_COMMENT: \n            var comment = action.payload;\n            comment.id = state.comments.length;\n            comment.date = new Date().toISOString();\n            return {...state, comments: state.comments.concat(comment)};\n\n        default: \n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}