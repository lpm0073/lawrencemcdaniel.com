{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n});\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + 'dishes').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => {\n    console.log('fetchDishes.catch - ' + error);\n    return error;\n  }).catch(error => dispatch(dishesFailed(error)));\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\n/* ----------------------------------- */\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\n/* ----------------------------------- */\n\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading(true));\n  return fetch(baseUrl + 'promotions').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(promotions => dispatch(addPromos(promotions))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});\n/* ----------------------------------- */","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/coursera-react/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","dishes","addDishes","catch","console","log","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promotions","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","promos","ADD_PROMOS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (dishId, rating, author, comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n});\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message)\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => {\n        console.log('fetchDishes.catch - ' + error);\n        return error;\n    })\n    .catch(error => dispatch(dishesFailed(error)));\n};\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => (\n    {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n/* ----------------------------------- */\nexport const fetchComments = () => (dispatch) => {\n\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        }\n        )\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n        \n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\n/* ----------------------------------- */\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        }\n        )\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromos(promotions)))\n        .catch(error => dispatch(promosFailed(error.message)));\n\n};\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n/* ----------------------------------- */\n\n"]},"metadata":{},"sourceType":"module"}