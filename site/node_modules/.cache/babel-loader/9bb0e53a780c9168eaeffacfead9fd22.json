{"ast":null,"code":"var _jsxFileName = \"/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/pages/portfolioDetail/Component.js\";\nimport React from 'react';\nimport RenderPageTitle from '../../components/pagetitle/pageTitleComponent';\nimport Loading from '../../components/Loading';\nimport './styles.css';\n\nconst PortfolioDetail = props => {\n  if (props.postLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }\n    })));\n  } else if (props.postErrMess) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }\n    }, props.errMess)));\n  } else if (props.post != null) {\n    function innerHTML(selector) {\n      if (selector) {\n        return selector.innerHTML;\n      }\n\n      return null;\n    }\n\n    function toJSON(str) {\n      try {\n        // remove curly quotes\n        str = str.replace(/[\\u2018\\u2019]/g, \"'\").replace(/[\\u201C\\u201D]/g, '\"'); // replace <br> with actual carriage return\n\n        str = str.replace(/<br\\s*[\\/]?>/gi, \"\\n\");\n        return JSON.parse(str);\n      } catch (e) {\n        console.log(\"toJSON() - error:\", e);\n        return null;\n      }\n    }\n\n    var parser = new DOMParser();\n    var doc = parser.parseFromString(props.post.content.rendered, \"text/html\");\n    var raw = innerHTML(doc.querySelector(\"p\"));\n    var my_json = toJSON(raw);\n    var description = null;\n    var urls = [];\n\n    if (my_json != null) {\n      description = my_json.description;\n      urls = my_json.images;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"project-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"site-page \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RenderPageTitle, {\n      theme: \"light\",\n      icon: \"fa-briefcase\",\n      title: \"PROJECT\",\n      boxed_title: \"Detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, description, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }), urls.map((url, indx) => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        key: indx,\n        src: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 41\n        }\n      });\n    }))))));\n  }\n};\n\nexport default PortfolioDetail;","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/pages/portfolioDetail/Component.js"],"names":["React","RenderPageTitle","Loading","PortfolioDetail","props","postLoading","postErrMess","errMess","post","innerHTML","selector","toJSON","str","replace","JSON","parse","e","console","log","parser","DOMParser","doc","parseFromString","content","rendered","raw","querySelector","my_json","description","urls","images","map","url","indx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport RenderPageTitle from '../../components/pagetitle/pageTitleComponent';\nimport Loading from '../../components/Loading';\n\nimport './styles.css';\n\n\nconst PortfolioDetail = (props) => {\n\n    if (props.postLoading) {\n        return(\n            <div className=\"\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.postErrMess) {\n        return(\n            <div className=\"\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.post != null) {\n\n        function innerHTML(selector) {\n\n            if (selector) {\n                return selector.innerHTML;\n            }\n            return null;\n        }\n\n        function toJSON(str) {\n            try {\n                // remove curly quotes\n                str = str.replace(/[\\u2018\\u2019]/g, \"'\").replace(/[\\u201C\\u201D]/g, '\"');\n\n                // replace <br> with actual carriage return\n                str = str.replace(/<br\\s*[\\/]?>/gi, \"\\n\");\n                return JSON.parse(str);\n            } catch (e) {\n                console.log(\"toJSON() - error:\", e);\n                return null;\n            }\n        }\n\n        var parser = new DOMParser();\n        var doc = parser.parseFromString(props.post.content.rendered, \"text/html\");\n        var raw = innerHTML(doc.querySelector(\"p\"));\n\n        var my_json = toJSON(raw);\n        var description = null;\n        var urls = [];\n        if (my_json != null) {\n            description = my_json.description;\n            urls = my_json.images;\n        }\n\n\n        return(\n            <React.Fragment>\n                <div className=\"project-page\">\n                    <div className=\"site-page \">\n                        <RenderPageTitle theme=\"light\" icon=\"fa-briefcase\" title=\"PROJECT\" boxed_title=\"Detail\" />\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                {description}\n\n                                <hr />\n\n                                {urls.map((url, indx) => {\n                                    return (\n                                        <img key={indx} src={url} />\n                                    );\n                                })}\n                        </div>\n                    </div>\n                    </div>\n                </div>              \n            </React.Fragment>\n        );\n    } \n}\n\nexport default PortfolioDetail;"]},"metadata":{},"sourceType":"module"}