{"ast":null,"code":"const getPixelRatio = context => {\n  var backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nconst drawCircle = canvas => {\n  let context = canvas.getContext('2d');\n  let ratio = getPixelRatio(context);\n  let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n  let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n  canvas.width = width * ratio;\n  canvas.height = height * ratio;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n  context.lineWidth = 10;\n  context.strokeStyle = '#474D5D';\n  context.shadowColor = '#656565';\n  var x = canvas.width / 2;\n  var y = canvas.height / 2;\n  var radius = x - context.lineWidth;\n  var endPercent = 100;\n  var circ = Math.PI * 2;\n  var quart = Math.PI / 2;\n  var i = 0;\n  let requestId;\n\n  const render = pct => {\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    context.beginPath();\n    context.arc(x, y, radius, -quart, circ * pct - quart, false);\n    context.stroke();\n    i += 2;\n\n    if (i <= endPercent) {\n      requestId = requestAnimationFrame(function () {\n        render(i / 100);\n      });\n    }\n  };\n\n  setTimeout(function () {\n    render();\n  }, Math.random() * 300);\n  return () => {\n    cancelAnimationFrame(requestId);\n  };\n};\n\nexport default drawCircle;","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/pages/skills/drawCircle.js"],"names":["getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","drawCircle","canvas","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","lineWidth","strokeStyle","shadowColor","x","y","radius","endPercent","circ","Math","PI","quart","i","requestId","render","pct","clearRect","beginPath","arc","stroke","requestAnimationFrame","setTimeout","random","cancelAnimationFrame"],"mappings":"AACA,MAAMA,aAAa,GAAGC,OAAO,IAAI;AAC7B,MAAIC,YAAY,GAAGD,OAAO,CAACE,sBAAR,IACCF,OAAO,CAACG,4BADT,IAECH,OAAO,CAACI,yBAFT,IAGCJ,OAAO,CAACK,wBAHT,IAICL,OAAO,CAACM,uBAJT,IAKCN,OAAO,CAACE,sBALT,IAMC,CANpB;AAQA,SAAO,CAACK,MAAM,CAACC,gBAAP,IAA2B,CAA5B,IAAiCP,YAAxC;AACC,CAVL;;AAaA,MAAMQ,UAAU,GAAIC,MAAD,IAAY;AAC3B,MAAIV,OAAO,GAAGU,MAAM,CAACC,UAAP,CAAkB,IAAlB,CAAd;AAEA,MAAIC,KAAK,GAAGb,aAAa,CAACC,OAAD,CAAzB;AACA,MAAIa,KAAK,GAAGC,gBAAgB,CAACJ,MAAD,CAAhB,CAAyBK,gBAAzB,CAA0C,OAA1C,EAAmDC,KAAnD,CAAyD,CAAzD,EAA4D,CAAC,CAA7D,CAAZ;AACA,MAAIC,MAAM,GAAGH,gBAAgB,CAACJ,MAAD,CAAhB,CAAyBK,gBAAzB,CAA0C,QAA1C,EAAoDC,KAApD,CAA0D,CAA1D,EAA6D,CAAC,CAA9D,CAAb;AAEAN,EAAAA,MAAM,CAACG,KAAP,GAAeA,KAAK,GAAGD,KAAvB;AACAF,EAAAA,MAAM,CAACO,MAAP,GAAgBA,MAAM,GAAGL,KAAzB;AACAF,EAAAA,MAAM,CAACQ,KAAP,CAAaL,KAAb,GAAsB,GAAEA,KAAM,IAA9B;AACAH,EAAAA,MAAM,CAACQ,KAAP,CAAaD,MAAb,GAAuB,GAAEA,MAAO,IAAhC;AAEAjB,EAAAA,OAAO,CAACmB,SAAR,GAAoB,EAApB;AACAnB,EAAAA,OAAO,CAACoB,WAAR,GAAsB,SAAtB;AACApB,EAAAA,OAAO,CAACqB,WAAR,GAAsB,SAAtB;AAGA,MAAIC,CAAC,GAAGZ,MAAM,CAACG,KAAP,GAAe,CAAvB;AACA,MAAIU,CAAC,GAAGb,MAAM,CAACO,MAAP,GAAgB,CAAxB;AACA,MAAIO,MAAM,GAAGF,CAAC,GAAGtB,OAAO,CAACmB,SAAzB;AACA,MAAIM,UAAU,GAAG,GAAjB;AACA,MAAIC,IAAI,GAAGC,IAAI,CAACC,EAAL,GAAU,CAArB;AACA,MAAIC,KAAK,GAAGF,IAAI,CAACC,EAAL,GAAU,CAAtB;AACA,MAAIE,CAAC,GAAG,CAAR;AACA,MAAIC,SAAJ;;AAEA,QAAMC,MAAM,GAAIC,GAAD,IAAS;AAEpBjC,IAAAA,OAAO,CAACkC,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBxB,MAAM,CAACG,KAA/B,EAAsCH,MAAM,CAACO,MAA7C;AACAjB,IAAAA,OAAO,CAACmC,SAAR;AACAnC,IAAAA,OAAO,CAACoC,GAAR,CAAYd,CAAZ,EAAeC,CAAf,EAAkBC,MAAlB,EAA0B,CAAEK,KAA5B,EAAqCH,IAAI,GAAGO,GAAR,GAAeJ,KAAnD,EAA0D,KAA1D;AACA7B,IAAAA,OAAO,CAACqC,MAAR;AACAP,IAAAA,CAAC,IAAG,CAAJ;;AAEA,QAAIA,CAAC,IAAIL,UAAT,EAAqB;AACjBM,MAAAA,SAAS,GAAGO,qBAAqB,CAAC,YAAY;AAC1CN,QAAAA,MAAM,CAACF,CAAC,GAAG,GAAL,CAAN;AACH,OAFgC,CAAjC;AAGH;AAEJ,GAdD;;AAgBAS,EAAAA,UAAU,CAAC,YAAU;AACjBP,IAAAA,MAAM;AACT,GAFS,EAEPL,IAAI,CAACa,MAAL,KAAgB,GAFT,CAAV;AAKA,SAAO,MAAM;AACTC,IAAAA,oBAAoB,CAACV,SAAD,CAApB;AACH,GAFD;AAIH,CAnDD;;AAqDA,eAAetB,UAAf","sourcesContent":["\nconst getPixelRatio = context => {\n    var backingStore = context.backingStorePixelRatio ||\n                        context.webkitBackingStorePixelRatio ||\n                        context.mozBackingStorePixelRatio ||\n                        context.msBackingStorePixelRatio ||\n                        context.oBackingStorePixelRatio ||\n                        context.backingStorePixelRatio || \n                        1;\n    \n    return (window.devicePixelRatio || 1) / backingStore;\n    }\n\n\nconst drawCircle = (canvas) => {\n    let context = canvas.getContext('2d');\n    \n    let ratio = getPixelRatio(context);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n            \n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    context.lineWidth = 10;\n    context.strokeStyle = '#474D5D';\n    context.shadowColor = '#656565';\n \n\n    var x = canvas.width / 2;\n    var y = canvas.height / 2;\n    var radius = x - context.lineWidth;\n    var endPercent = 100;\n    var circ = Math.PI * 2;\n    var quart = Math.PI / 2;\n    var i = 0;\n    let requestId;\n\n    const render = (pct) => {\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.beginPath();\n        context.arc(x, y, radius, -(quart), (circ * pct) - quart, false);\n        context.stroke();\n        i +=2;\n \n        if (i <= endPercent) {\n            requestId = requestAnimationFrame(function () {\n                render(i / 100)\n            });\n        }\n \n    };\n\n    setTimeout(function(){ \n        render(); \n    }, Math.random() * 300);\n    \n\n    return () => {\n        cancelAnimationFrame(requestId);\n    };\n\n}\n\nexport default drawCircle;\n"]},"metadata":{},"sourceType":"module"}