{"ast":null,"code":"var _jsxFileName = \"/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/pages/skills/skillColumn.js\";\nimport React from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n\nconst getPixelRatio = context => {\n  var backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nconst SkillColumn = props => {\n  const thisClassName = \"fa p-3 \" + props.icon + \" fa-2x\";\n  const ref = useRef();\n  useEffect(() => {\n    let canvas = ref.current;\n    let context = canvas.getContext('2d');\n    let ratio = getPixelRatio(context);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n    context.beginPath();\n    context.arc(canvas.width / 2, canvas.height / 2, canvas.width / 2, 0, 2 * Math.PI);\n    context.fill();\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-2 col-md-4 col-sm-6 px-1 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skill-column text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: ref,\n    className: \"skill-pct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"skill-title mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"skill-description px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, props.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skill-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: thisClassName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default SkillColumn;","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/pages/skills/skillColumn.js"],"names":["React","useRef","useEffect","getPixelRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","SkillColumn","props","thisClassName","icon","ref","canvas","current","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","beginPath","arc","Math","PI","fill","title","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n\nconst getPixelRatio = context => {\n    var backingStore = context.backingStorePixelRatio ||\n                        context.webkitBackingStorePixelRatio ||\n                        context.mozBackingStorePixelRatio ||\n                        context.msBackingStorePixelRatio ||\n                        context.oBackingStorePixelRatio ||\n                        context.backingStorePixelRatio ||\n                        1;\n    \n    return (window.devicePixelRatio || 1) / backingStore;\n    };\n\nconst SkillColumn = (props) => {\n    \n    const thisClassName = \"fa p-3 \" + props.icon + \" fa-2x\";\n    const ref = useRef();\n\n    useEffect(() => {\n        let canvas = ref.current;\n        let context = canvas.getContext('2d');\n        \n        let ratio = getPixelRatio(context);\n        let width = getComputedStyle(canvas)\n            .getPropertyValue('width')\n            .slice(0, -2);\n        let height = getComputedStyle(canvas)\n            .getPropertyValue('height')\n            .slice(0, -2);\n                \n        canvas.width = width * ratio;\n        canvas.height = height * ratio;\n        canvas.style.width = `${width}px`;\n        canvas.style.height = `${height}px`;\n        \n        context.beginPath();\n        context.arc(\n        canvas.width / 2,\n        canvas.height / 2,\n        canvas.width / 2,\n                0,\n                2 * Math.PI\n            );\n        context.fill();\n    });\n\n    return(\n        <React.Fragment>\n            <div className=\"col-lg-2 col-md-4 col-sm-6 px-1 mb-5\">\n                <div className=\"skill-column text-center\">\n                    <canvas \n                        ref={ref}\n                        className=\"skill-pct\" />\n                    <h4 className=\"skill-title mt-4\">{props.title}</h4>\n                    <p className=\"skill-description px-2\">{props.description}</p>\n                    <div className=\"skill-icon\">\n                        <i className={thisClassName}></i>\n                    </div>\n                </div>\n            </div>\n\n        </React.Fragment>\n\n    );\n}\n\nexport default SkillColumn;\n\n"]},"metadata":{},"sourceType":"module"}