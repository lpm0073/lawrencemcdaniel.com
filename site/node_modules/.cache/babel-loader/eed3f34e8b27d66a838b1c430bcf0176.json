{"ast":null,"code":"import{getPixelRatio}from'../../shared/getPixelRatio';var drawBar=function drawBar(ref){var canvas=ref.current;var context=canvas.getContext('2d');var ratio=getPixelRatio(context);var width=getComputedStyle(canvas).getPropertyValue('width').slice(0,-2);var height=getComputedStyle(canvas).getPropertyValue('height').slice(0,-2);canvas.width=width*ratio;canvas.height=height*ratio;canvas.style.width=\"\".concat(width,\"px\");canvas.style.height=\"\".concat(height,\"px\");context.lineWidth=canvas.height*2;context.strokeStyle='#666';context.shadowOffsetX=0;context.shadowOffsetY=0;context.shadowBlur=0;context.shadowColor='#656565';var x=canvas.width;var y=canvas.height;var endPercent=100;var i=0;var requestId;var render=function render(pct){context.clearRect(0,0,canvas.width,canvas.height);context.beginPath();context.moveTo(0,y);context.lineTo(x*pct,0);context.stroke();i+=2;if(i<=endPercent){requestId=requestAnimationFrame(function(){render(i/100);});}};setTimeout(function(){render();},Math.random()*300);return function(){cancelAnimationFrame(requestId);};};export default drawBar;","map":{"version":3,"sources":["/Users/mcdaniel/github/lpm0073/lawrencemcdaniel.com/site/src/pages/skills/drawBar.js"],"names":["getPixelRatio","drawBar","ref","canvas","current","context","getContext","ratio","width","getComputedStyle","getPropertyValue","slice","height","style","lineWidth","strokeStyle","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","x","y","endPercent","i","requestId","render","pct","clearRect","beginPath","moveTo","lineTo","stroke","requestAnimationFrame","setTimeout","Math","random","cancelAnimationFrame"],"mappings":"AAAA,OAASA,aAAT,KAA8B,4BAA9B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,GAAD,CAAS,CACrB,GAAIC,CAAAA,MAAM,CAAGD,GAAG,CAACE,OAAjB,CACA,GAAIC,CAAAA,OAAO,CAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAd,CAEA,GAAIC,CAAAA,KAAK,CAAGP,aAAa,CAACK,OAAD,CAAzB,CACA,GAAIG,CAAAA,KAAK,CAAGC,gBAAgB,CAACN,MAAD,CAAhB,CAAyBO,gBAAzB,CAA0C,OAA1C,EAAmDC,KAAnD,CAAyD,CAAzD,CAA4D,CAAC,CAA7D,CAAZ,CACA,GAAIC,CAAAA,MAAM,CAAGH,gBAAgB,CAACN,MAAD,CAAhB,CAAyBO,gBAAzB,CAA0C,QAA1C,EAAoDC,KAApD,CAA0D,CAA1D,CAA6D,CAAC,CAA9D,CAAb,CAEAR,MAAM,CAACK,KAAP,CAAeA,KAAK,CAAGD,KAAvB,CACAJ,MAAM,CAACS,MAAP,CAAgBA,MAAM,CAAGL,KAAzB,CACAJ,MAAM,CAACU,KAAP,CAAaL,KAAb,WAAwBA,KAAxB,OACAL,MAAM,CAACU,KAAP,CAAaD,MAAb,WAAyBA,MAAzB,OAEAP,OAAO,CAACS,SAAR,CAAoBX,MAAM,CAACS,MAAP,CAAgB,CAApC,CACAP,OAAO,CAACU,WAAR,CAAsB,MAAtB,CACAV,OAAO,CAACW,aAAR,CAAwB,CAAxB,CACAX,OAAO,CAACY,aAAR,CAAwB,CAAxB,CACAZ,OAAO,CAACa,UAAR,CAAqB,CAArB,CACAb,OAAO,CAACc,WAAR,CAAsB,SAAtB,CAGA,GAAIC,CAAAA,CAAC,CAAGjB,MAAM,CAACK,KAAf,CACA,GAAIa,CAAAA,CAAC,CAAGlB,MAAM,CAACS,MAAf,CACA,GAAIU,CAAAA,UAAU,CAAG,GAAjB,CACA,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACA,GAAIC,CAAAA,SAAJ,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,GAAD,CAAS,CAEpBrB,OAAO,CAACsB,SAAR,CAAkB,CAAlB,CAAqB,CAArB,CAAwBxB,MAAM,CAACK,KAA/B,CAAsCL,MAAM,CAACS,MAA7C,EACAP,OAAO,CAACuB,SAAR,GAEAvB,OAAO,CAACwB,MAAR,CAAe,CAAf,CAAkBR,CAAlB,EACAhB,OAAO,CAACyB,MAAR,CAAeV,CAAC,CAAGM,GAAnB,CAAwB,CAAxB,EAEArB,OAAO,CAAC0B,MAAR,GACAR,CAAC,EAAG,CAAJ,CAEA,GAAIA,CAAC,EAAID,UAAT,CAAqB,CACjBE,SAAS,CAAGQ,qBAAqB,CAAC,UAAY,CAC1CP,MAAM,CAACF,CAAC,CAAG,GAAL,CAAN,CACH,CAFgC,CAAjC,CAGH,CAEJ,CAjBD,CAmBAU,UAAU,CAAC,UAAW,CAClBR,MAAM,GACT,CAFS,CAEPS,IAAI,CAACC,MAAL,GAAgB,GAFT,CAAV,CAKA,MAAO,WAAM,CACTC,oBAAoB,CAACZ,SAAD,CAApB,CACH,CAFD,CAIH,CAvDD,CAyDA,cAAevB,CAAAA,OAAf","sourcesContent":["import { getPixelRatio } from '../../shared/getPixelRatio';\n\nconst drawBar = (ref) => {\n    let canvas = ref.current;\n    let context = canvas.getContext('2d');\n    \n    let ratio = getPixelRatio(context);\n    let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n    let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n            \n    canvas.width = width * ratio;\n    canvas.height = height * ratio;\n    canvas.style.width = `${width}px`;\n    canvas.style.height = `${height}px`;\n\n    context.lineWidth = canvas.height * 2;\n    context.strokeStyle = '#666';\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 0;\n    context.shadowColor = '#656565';\n    \n\n    var x = canvas.width;\n    var y = canvas.height;\n    var endPercent = 100;\n    var i = 0;\n    let requestId;\n\n    const render = (pct) => {\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.beginPath();\n\n        context.moveTo(0, y);\n        context.lineTo(x * pct, 0);\n    \n        context.stroke();\n        i +=2;\n    \n        if (i <= endPercent) {\n            requestId = requestAnimationFrame(function () {\n                render(i / 100)\n            });\n        }\n    \n    };\n\n    setTimeout(function() { \n        render(); \n    }, Math.random() * 300);\n    \n\n    return () => {\n        cancelAnimationFrame(requestId);\n    };\n\n};\n\nexport default drawBar;"]},"metadata":{},"sourceType":"module"}